{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"en/","text":"What is ZeroNet? ZeroNet uses Bitcoin cryptography and BitTorrent technology to build a decentralized censorship-resistant network . Users can publish static or dynamic websites to ZeroNet and visitors can choose to also serve the site themselves. Websites will remain online as long as one peer is still online. When a site is updated by its owner, all nodes serving that site (previous visitors) will receive only the incremental updates made to the site content. ZeroNet comes with a built-in SQL database. This makes content-heavy site development easy. The DB is then synced to hosting nodes via incremental updates. Why? We believe in open, free, and uncensored communication. No censorship: After something is published there is no way to remove it. No single point of failure: Content remains online even if only one peer is serving it. Impossible to shut down: It's nowhere because it's everywhere. Content is served by any user who wishes to. Fast: ZeroNet uses BitTorrent technology to deliver content faster than centralised servers. Works offline: You can access the site even if your internet is unavailable. Secure: Content ownership is secured using the same cryptography that secures your Bitcoin wallet. Features Easy, zero configuration setup. Password-less BIP32 based authorization: Your account is protected by the same cryptography as your Bitcoin wallet. Sites updated in real-time, no refreshing needed. Namecoin .bit domains support. SQL Database support: Allows for easier site development and faster page load times. Anonymity: Full Tor network support with .onion hidden services instead of ipv4 addresses. TLS encrypted connections. Automatic, uPnP port opening. Plugin for multiuser (openproxy) support. Works with any browser/OS. How does it work? After you install and run ZeroNet, you open a site by visiting: http://127.0.0.1:43110/{zeronet_site_address} (e.g. http://127.0.0.1:43110/1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D ). ZeroNet will then use the BitTorrent network to find peers that are seeding the site and will download the site content (HTML, CSS, JS...) from these peers. Each site visited is then served by your client. Sites can removed or blacklisted if necessary. Every site contains a list of all of its files, each entry containing a SHA512 hash and a signature generated using the site owner's private key. If the site owner modifies the site, then he/she signs a new list and publishes it to the peers. After the peers have verified the files list integrity (using the signature), they download the modified files and publish the new content to other peers. Slideshow about ZeroNet cryptography, content updates, multi-user sites Screenshots More screenshots Current limitations No torrent-like, file splitting for big file support (BigFile plugin enables this) File transactions are not compressed or encrypted yet (TLS encryption added) No private sites Help to keep this project alive Bitcoin: 1QDhxQ6PraUZa21ET5fYUCPgdrwBomnFgX Full donation page Thank you! More info, help, changelog, zeronet sites: http://www.reddit.com/r/zeronet/ Come, chat with us: #zeronet @ FreeNode or on gitter","title":"Introduction"},{"location":"en/#what-is-zeronet","text":"ZeroNet uses Bitcoin cryptography and BitTorrent technology to build a decentralized censorship-resistant network . Users can publish static or dynamic websites to ZeroNet and visitors can choose to also serve the site themselves. Websites will remain online as long as one peer is still online. When a site is updated by its owner, all nodes serving that site (previous visitors) will receive only the incremental updates made to the site content. ZeroNet comes with a built-in SQL database. This makes content-heavy site development easy. The DB is then synced to hosting nodes via incremental updates.","title":"What is ZeroNet?"},{"location":"en/#why","text":"We believe in open, free, and uncensored communication. No censorship: After something is published there is no way to remove it. No single point of failure: Content remains online even if only one peer is serving it. Impossible to shut down: It's nowhere because it's everywhere. Content is served by any user who wishes to. Fast: ZeroNet uses BitTorrent technology to deliver content faster than centralised servers. Works offline: You can access the site even if your internet is unavailable. Secure: Content ownership is secured using the same cryptography that secures your Bitcoin wallet.","title":"Why?"},{"location":"en/#features","text":"Easy, zero configuration setup. Password-less BIP32 based authorization: Your account is protected by the same cryptography as your Bitcoin wallet. Sites updated in real-time, no refreshing needed. Namecoin .bit domains support. SQL Database support: Allows for easier site development and faster page load times. Anonymity: Full Tor network support with .onion hidden services instead of ipv4 addresses. TLS encrypted connections. Automatic, uPnP port opening. Plugin for multiuser (openproxy) support. Works with any browser/OS.","title":"Features"},{"location":"en/#how-does-it-work","text":"After you install and run ZeroNet, you open a site by visiting: http://127.0.0.1:43110/{zeronet_site_address} (e.g. http://127.0.0.1:43110/1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D ). ZeroNet will then use the BitTorrent network to find peers that are seeding the site and will download the site content (HTML, CSS, JS...) from these peers. Each site visited is then served by your client. Sites can removed or blacklisted if necessary. Every site contains a list of all of its files, each entry containing a SHA512 hash and a signature generated using the site owner's private key. If the site owner modifies the site, then he/she signs a new list and publishes it to the peers. After the peers have verified the files list integrity (using the signature), they download the modified files and publish the new content to other peers.","title":"How does it work?"},{"location":"en/#slideshow-about-zeronet-cryptography-content-updates-multi-user-sites","text":"","title":"Slideshow about ZeroNet cryptography, content updates, multi-user sites &raquo;"},{"location":"en/#screenshots","text":"","title":"Screenshots"},{"location":"en/#more-screenshots","text":"","title":"More screenshots &raquo;"},{"location":"en/#current-limitations","text":"No torrent-like, file splitting for big file support (BigFile plugin enables this) File transactions are not compressed or encrypted yet (TLS encryption added) No private sites","title":"Current limitations"},{"location":"en/#help-to-keep-this-project-alive","text":"Bitcoin: 1QDhxQ6PraUZa21ET5fYUCPgdrwBomnFgX Full donation page","title":"Help to keep this project alive"},{"location":"en/#thank-you","text":"More info, help, changelog, zeronet sites: http://www.reddit.com/r/zeronet/ Come, chat with us: #zeronet @ FreeNode or on gitter","title":"Thank you!"},{"location":"en/faq/","text":"Frequently asked questions Do I need to have a port opened? This is optional , you can browse and use ZeroNet sites without an open port. If you want to create a new site it's highly recommended to have an open port. At startup ZeroNet tries to open a port for you on your router using UPnP , if this fails you have to do it manually: Try to access your router's web interface using http://192.168.1.1 or http://192.168.0.1 Look for an \"Enable UPnP support\" or similar option then restart ZeroNet. If it still doesn't work then try to find a 'port forwarding' section of your router page. This is different for every router. Here is a tutorial on YouTube. The port to forward is 15441. Is ZeroNet anonymous? It's no more anonymous than BitTorrent, but privacy (the possibility to find out who is the owner of the comment/site) will increase as the network and the sites gains more peers. ZeroNet is made to work with anonymity networks: you can easily hide your IP using the Tor network. How to use ZeroNet with the Tor browser? In Tor mode it is recommended to use ZeroNet from within the Tor Browser: Start the Tor Browser Go to address about:preferences#advanced Click Settings... Enter 127.0.0.1 to field No proxy for Open http://127.0.0.1:43110 in the browser If you still see a blank page: - Click on NoScript's button (first on the toolbar) - Choose \"Temporary allow all this page\" - Reload the page How to use ZeroNet with Tor? If you want to hide your IP address, install the latest version of ZeroNet then click Tor Enable Tor for every connection on ZeroHello. On Windows, Tor is bundled with ZeroNet. ZeroNet will attempt to download and unpack Tor on its first run. If this fails for any reason, you can install it manually following the instruction in core\\tools\\tor\\manual_install.txt . For other OS's, follow the instructions in the \"How to make ZeroNet work with Tor under Linux/MacOS\" section. Tip: You can verify your IP address using ZeroNet's Stats page. Tip: If you get connection errors, make sure you have the latest version of Tor installed. (0.2.7.5+ required) How to make ZeroNet work with Tor under Linux/MacOS? Install Tor for your OS following Tor's official guidelines: Linux Mac . sudo nano /etc/tor/torrc Remove the # character from lines ControlPort 9051 and CookieAuthentication 1 (line ~57) Restart tor Add permission for yourself to read the auth cookie. With Debian Linux, the command is sudo usermod -a -G debian-tor [yourlinuxuser] (if you are not on Debian check the file's user group by ls -al /var/run/tor/control.authcookie ) Logout/Login with your user to apply group changes Tip: You can verify if your Tor setup is running correctly using echo 'PROTOCOLINFO' | nc 127.0.0.1 9051 Tip: It's also possible to use Tor without modifying torrc (or to use older versions of Tor clients), by running zeronet.py --tor disable --proxy 127.0.0.1:9050 --disable_udp , but then you will lose ability to talk with other .onion addresses. Is it possible to use a configuration file? Any command line configuration flag can also be used as a configuration option. Place these options line-by-line into a file called zeronet.conf in your top-level zeronet directory (the one with zeronet.py). Example: [global] data_dir = my-data-dir log_dir = my-log-dir ui_restrict = 1.2.3.4 2.3.4.5 To list possible options, use the zeronet.py --help command How to make Tor work if my ISP or goverment blocks it? ZeroNet does not include Tor pluggable transports yet. The easiest way to make Tor work in a censored network is to start the Tor browser, configure it to connect to the Tor network with working pluggable transports, and modify ZeroNet's config to use Tor browser's proxy and control port by starting ZeroNet with --tor_controller 127.0.0.1:9151 --tor_proxy 127.0.0.1:9150 or by adding these parameters to zeronet.conf . [global] tor_controller = 127.0.0.1:9151 tor_proxy = 127.0.0.1:9150 Can I use the same username on multiple machines? Yes, simply copy the data/users.json file to your new machine. How to create a \"fancy\" (non .bit) site address? Use vanitygen to generate one. Once you get your keys, create data/1YourPublicKey...tCkBzAXTKvJk4uj8 directory. Put some files there. Then navigate to http://127.0.0.1:43110/1YourPublicKey...tCkBzAXTKvJk4uj8/ . Drag the 0 button to the left and use the sidebar to sign your site. How can I register a .bit domain? You can register .bit domains using Namecoin . Manage your domains using the client's GUI or by the command line interface . After the registration is done you have to edit your domain's record by adding a zeronet section to it, e.g.: { ... zeronet : { : 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr , blog : 1BLogC9LN4oPDcruNz3qo1ysa133E9AGg8 , talk : 1TaLk3zM7ZRskJvrh3ZNCDVGXvkJusPKQ }, ... } An empty string ( \"\" ) means the top domain, anything other than that is a sub-domain. Tip: You can buy Namecoin for Bitcoin or other cryptocurrencies using shapeshift.io . Tip: Other possibilities to register .bit domains: domaincoin.net , peername.com , dotbit.me Tip: You can verify your domain on namecha.in , for example: zeroid.bit Tip: You should use only lower-cased letters, numbers and - in your domains . Tip: To make ZeroHello display your domain name instead of your site's Bitcoin address, add a domain key to your content.json. ( Example ) Can I use the generated site address/private key to accept Bitcoin payments? Yes, it's a standard Bitcoin address. The private key is WIF formatted, so you can import it in most clients. Tip: It's not recommended to keep a high amount of money on your site's address, because you have to enter your private key every time you modify your site. What happens when someone hosts malicious content? The ZeroNet sites are sandboxed, they have the same privileges as any other website you visit over the Internet. You are in full control of what you are hosting. If you find suspicious content you can stop hosting the site at any time. Is it possible to install ZeroNet to a remote machine? Yes, you have to enable the UiPassword plugin by renaming the plugins/disabled-UiPassword directory to plugins/UiPassword , then start ZeroNet on the remote machine using zeronet.py --ui_ip \"*\" --ui_password anypassword . This will bind the ZeroNet UI webserver to all interfaces, but to keep it secure you can only access it by entering the given password. Tip: You can also restrict the interface based on ip address by using --ui_restrict ip1 ip2 . Tip: You can specify the password in the config file by creating a zeronet.conf file and adding [global] and ui_password = anypassword lines to it. Is there any way to track the bandwidth ZeroNet is using? The sent/received bytes are displayed at ZeroNet's sidebar. (open it by dragging the topright 0 button to left) Tip: Per connection statistics page: http://127.0.0.1:43110/Stats What happens if two people use the same keys to modify a site? Every content.json file is timestamped, the clients always accept the newest one with a valid signature. Does ZeroNet use Bitcoin's blockchain? No, ZeroNet only uses the cryptography of Bitcoin for site addresses and content signing/verification. User identification is based on Bitcoin's BIP32 format. Namecoin's blockchain is being used for domain registrations, however clients do not download the blockchain. Blockchain metadata is instead passed over the ZeroNet network. Does ZeroNet only support HTML, CSS websites? ZeroNet is built for dynamic, real-time updated websites, but you can serve any kind of files using it, such as (VCS repositories, your own thin-client, database, etc. How can I create a new ZeroNet site? Follow these instructions. What happens when I access a site? When you want to open a new site it asks for visitor's IP addresses from BitTorrent trackers. Initially, a file named content.json is downloaded, which holds all other filenames, hashes and the site owner's cryptographic signature. The downloaded content.json file is verified using the site's address and the site owner's signature from the file. Other files (html, css, js...) are then downloaded and verified using their size and SHA512 hash from content.json. Each visited site then becomes also served by you . If the site owner (who has the private key for the site address) modifies the site, then he/she signs the new content.json and publishes it to peers . After the peers have verified the file's integrity (using the signature), they download the modified files and serve the new content to other peers. More info: ZeroNet sample sites , Slideshow about how ZeroNet works","title":"Frequently asked questions"},{"location":"en/faq/#frequently-asked-questions","text":"","title":"Frequently asked questions"},{"location":"en/faq/#do-i-need-to-have-a-port-opened","text":"This is optional , you can browse and use ZeroNet sites without an open port. If you want to create a new site it's highly recommended to have an open port. At startup ZeroNet tries to open a port for you on your router using UPnP , if this fails you have to do it manually: Try to access your router's web interface using http://192.168.1.1 or http://192.168.0.1 Look for an \"Enable UPnP support\" or similar option then restart ZeroNet. If it still doesn't work then try to find a 'port forwarding' section of your router page. This is different for every router. Here is a tutorial on YouTube. The port to forward is 15441.","title":"Do I need to have a port opened?"},{"location":"en/faq/#is-zeronet-anonymous","text":"It's no more anonymous than BitTorrent, but privacy (the possibility to find out who is the owner of the comment/site) will increase as the network and the sites gains more peers. ZeroNet is made to work with anonymity networks: you can easily hide your IP using the Tor network.","title":"Is ZeroNet anonymous?"},{"location":"en/faq/#how-to-use-zeronet-with-the-tor-browser","text":"In Tor mode it is recommended to use ZeroNet from within the Tor Browser: Start the Tor Browser Go to address about:preferences#advanced Click Settings... Enter 127.0.0.1 to field No proxy for Open http://127.0.0.1:43110 in the browser If you still see a blank page: - Click on NoScript's button (first on the toolbar) - Choose \"Temporary allow all this page\" - Reload the page","title":"How to use ZeroNet with the Tor browser?"},{"location":"en/faq/#how-to-use-zeronet-with-tor","text":"If you want to hide your IP address, install the latest version of ZeroNet then click Tor Enable Tor for every connection on ZeroHello. On Windows, Tor is bundled with ZeroNet. ZeroNet will attempt to download and unpack Tor on its first run. If this fails for any reason, you can install it manually following the instruction in core\\tools\\tor\\manual_install.txt . For other OS's, follow the instructions in the \"How to make ZeroNet work with Tor under Linux/MacOS\" section. Tip: You can verify your IP address using ZeroNet's Stats page. Tip: If you get connection errors, make sure you have the latest version of Tor installed. (0.2.7.5+ required)","title":"How to use ZeroNet with Tor?"},{"location":"en/faq/#how-to-make-zeronet-work-with-tor-under-linuxmacos","text":"Install Tor for your OS following Tor's official guidelines: Linux Mac . sudo nano /etc/tor/torrc Remove the # character from lines ControlPort 9051 and CookieAuthentication 1 (line ~57) Restart tor Add permission for yourself to read the auth cookie. With Debian Linux, the command is sudo usermod -a -G debian-tor [yourlinuxuser] (if you are not on Debian check the file's user group by ls -al /var/run/tor/control.authcookie ) Logout/Login with your user to apply group changes Tip: You can verify if your Tor setup is running correctly using echo 'PROTOCOLINFO' | nc 127.0.0.1 9051 Tip: It's also possible to use Tor without modifying torrc (or to use older versions of Tor clients), by running zeronet.py --tor disable --proxy 127.0.0.1:9050 --disable_udp , but then you will lose ability to talk with other .onion addresses.","title":"How to make ZeroNet work with Tor under Linux/MacOS?"},{"location":"en/faq/#is-it-possible-to-use-a-configuration-file","text":"Any command line configuration flag can also be used as a configuration option. Place these options line-by-line into a file called zeronet.conf in your top-level zeronet directory (the one with zeronet.py). Example: [global] data_dir = my-data-dir log_dir = my-log-dir ui_restrict = 1.2.3.4 2.3.4.5 To list possible options, use the zeronet.py --help command","title":"Is it possible to use a configuration file?"},{"location":"en/faq/#how-to-make-tor-work-if-my-isp-or-goverment-blocks-it","text":"ZeroNet does not include Tor pluggable transports yet. The easiest way to make Tor work in a censored network is to start the Tor browser, configure it to connect to the Tor network with working pluggable transports, and modify ZeroNet's config to use Tor browser's proxy and control port by starting ZeroNet with --tor_controller 127.0.0.1:9151 --tor_proxy 127.0.0.1:9150 or by adding these parameters to zeronet.conf . [global] tor_controller = 127.0.0.1:9151 tor_proxy = 127.0.0.1:9150","title":"How to make Tor work if my ISP or goverment blocks it?"},{"location":"en/faq/#can-i-use-the-same-username-on-multiple-machines","text":"Yes, simply copy the data/users.json file to your new machine.","title":"Can I use the same username on multiple machines?"},{"location":"en/faq/#how-to-create-a-fancy-non-bit-site-address","text":"Use vanitygen to generate one. Once you get your keys, create data/1YourPublicKey...tCkBzAXTKvJk4uj8 directory. Put some files there. Then navigate to http://127.0.0.1:43110/1YourPublicKey...tCkBzAXTKvJk4uj8/ . Drag the 0 button to the left and use the sidebar to sign your site.","title":"How to create a \"fancy\" (non .bit) site address?"},{"location":"en/faq/#how-can-i-register-a-bit-domain","text":"You can register .bit domains using Namecoin . Manage your domains using the client's GUI or by the command line interface . After the registration is done you have to edit your domain's record by adding a zeronet section to it, e.g.: { ... zeronet : { : 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr , blog : 1BLogC9LN4oPDcruNz3qo1ysa133E9AGg8 , talk : 1TaLk3zM7ZRskJvrh3ZNCDVGXvkJusPKQ }, ... } An empty string ( \"\" ) means the top domain, anything other than that is a sub-domain. Tip: You can buy Namecoin for Bitcoin or other cryptocurrencies using shapeshift.io . Tip: Other possibilities to register .bit domains: domaincoin.net , peername.com , dotbit.me Tip: You can verify your domain on namecha.in , for example: zeroid.bit Tip: You should use only lower-cased letters, numbers and - in your domains . Tip: To make ZeroHello display your domain name instead of your site's Bitcoin address, add a domain key to your content.json. ( Example )","title":"How can I register a .bit domain?"},{"location":"en/faq/#can-i-use-the-generated-site-addressprivate-key-to-accept-bitcoin-payments","text":"Yes, it's a standard Bitcoin address. The private key is WIF formatted, so you can import it in most clients. Tip: It's not recommended to keep a high amount of money on your site's address, because you have to enter your private key every time you modify your site.","title":"Can I use the generated site address/private key to accept Bitcoin payments?"},{"location":"en/faq/#what-happens-when-someone-hosts-malicious-content","text":"The ZeroNet sites are sandboxed, they have the same privileges as any other website you visit over the Internet. You are in full control of what you are hosting. If you find suspicious content you can stop hosting the site at any time.","title":"What happens when someone hosts malicious content?"},{"location":"en/faq/#is-it-possible-to-install-zeronet-to-a-remote-machine","text":"Yes, you have to enable the UiPassword plugin by renaming the plugins/disabled-UiPassword directory to plugins/UiPassword , then start ZeroNet on the remote machine using zeronet.py --ui_ip \"*\" --ui_password anypassword . This will bind the ZeroNet UI webserver to all interfaces, but to keep it secure you can only access it by entering the given password. Tip: You can also restrict the interface based on ip address by using --ui_restrict ip1 ip2 . Tip: You can specify the password in the config file by creating a zeronet.conf file and adding [global] and ui_password = anypassword lines to it.","title":"Is it possible to install ZeroNet to a remote machine?"},{"location":"en/faq/#is-there-any-way-to-track-the-bandwidth-zeronet-is-using","text":"The sent/received bytes are displayed at ZeroNet's sidebar. (open it by dragging the topright 0 button to left) Tip: Per connection statistics page: http://127.0.0.1:43110/Stats","title":"Is there any way to track the bandwidth ZeroNet is using?"},{"location":"en/faq/#what-happens-if-two-people-use-the-same-keys-to-modify-a-site","text":"Every content.json file is timestamped, the clients always accept the newest one with a valid signature.","title":"What happens if two people use the same keys to modify a site?"},{"location":"en/faq/#does-zeronet-use-bitcoins-blockchain","text":"No, ZeroNet only uses the cryptography of Bitcoin for site addresses and content signing/verification. User identification is based on Bitcoin's BIP32 format. Namecoin's blockchain is being used for domain registrations, however clients do not download the blockchain. Blockchain metadata is instead passed over the ZeroNet network.","title":"Does ZeroNet use Bitcoin's blockchain?"},{"location":"en/faq/#does-zeronet-only-support-html-css-websites","text":"ZeroNet is built for dynamic, real-time updated websites, but you can serve any kind of files using it, such as (VCS repositories, your own thin-client, database, etc.","title":"Does ZeroNet only support HTML, CSS websites?"},{"location":"en/faq/#how-can-i-create-a-new-zeronet-site","text":"Follow these instructions.","title":"How can I create a new ZeroNet site?"},{"location":"en/faq/#what-happens-when-i-access-a-site","text":"When you want to open a new site it asks for visitor's IP addresses from BitTorrent trackers. Initially, a file named content.json is downloaded, which holds all other filenames, hashes and the site owner's cryptographic signature. The downloaded content.json file is verified using the site's address and the site owner's signature from the file. Other files (html, css, js...) are then downloaded and verified using their size and SHA512 hash from content.json. Each visited site then becomes also served by you . If the site owner (who has the private key for the site address) modifies the site, then he/she signs the new content.json and publishes it to peers . After the peers have verified the file's integrity (using the signature), they download the modified files and serve the new content to other peers. More info: ZeroNet sample sites , Slideshow about how ZeroNet works","title":"What happens when I access a site?"},{"location":"en/translation/","text":"Translation HowTo Instructions goes here.","title":"Translation HowTo"},{"location":"en/translation/#translation-howto","text":"Instructions goes here.","title":"Translation HowTo"},{"location":"en/help_zeronet/coding_conventions/","text":"Coding standards if you want to collaborate to ZeroNet Follow PEP8 Simple is better than complex Premature optimization is the root of all evil Naming ClassNames: Capitalized, CamelCased functionNames: starts with lowercase, camelCased variable_names: lowercased, under_scored Variables file_path: File path realtive to working dir (data/17ib6teRqdVgjB698T4cD1zDXKgPqpkrMg/css/all.css) inner_path: File relative to site dir (css/all.css) file_name: all.css file: Python file object privatekey: Private key for the site (without _) Source files directories and naming One class per file is preferred Source file name and directory comes from ClassName: WorkerManager class = Worker/WorkerManager.py","title":"Coding standards if you want to collaborate to ZeroNet"},{"location":"en/help_zeronet/coding_conventions/#coding-standards-if-you-want-to-collaborate-to-zeronet","text":"Follow PEP8 Simple is better than complex Premature optimization is the root of all evil","title":"Coding standards if you want to collaborate to ZeroNet"},{"location":"en/help_zeronet/coding_conventions/#naming","text":"ClassNames: Capitalized, CamelCased functionNames: starts with lowercase, camelCased variable_names: lowercased, under_scored","title":"Naming"},{"location":"en/help_zeronet/coding_conventions/#variables","text":"file_path: File path realtive to working dir (data/17ib6teRqdVgjB698T4cD1zDXKgPqpkrMg/css/all.css) inner_path: File relative to site dir (css/all.css) file_name: all.css file: Python file object privatekey: Private key for the site (without _)","title":"Variables"},{"location":"en/help_zeronet/coding_conventions/#source-files-directories-and-naming","text":"One class per file is preferred Source file name and directory comes from ClassName: WorkerManager class = Worker/WorkerManager.py","title":"Source files directories and naming"},{"location":"en/help_zeronet/contributing/","text":"Contributing to ZeroNet Thank you for using ZeroNet. ZeroNet is a collaborative effort of 67+ decentralization enthusiasts just like you. We appreciate all users that catch bugs, improve documentation and have good ideas of designing new protocols. Here are a few guidelines we ask you to follow to get started with making your contribution. You don\u2019t have to contribute source code In fact, a majority of contributors do not submit source code. Even if you like to write programs, other types of contribution are also welcomed. Do you like to write? Write about ZeroNet. Write tutorials to help people set things up. Help translate ZeroNet. Improve this documentation. This documentation is a written by many community members all over the world. Do you like helping people? Subscribe to our issue tracker on GitHub and help people solve problems. Join us on Gitter and IRC channel #zeronet @ freenode and help answer questions. Set up a seed box and help make the network faster. Do you like to make websites? Create new ZeroNet sites. Go ahead and make your own blog on ZeroNet. It is easy and costs little. \u201cContent is king!\u201d as NoFish puts. The network is worth nothing without content, so we need You to make it succeed. Do you like to do research? Help us investigate our hard issues . Join our discussion of designing new features and protocols, such as I2P support and DHT support . Do you own a Raspberry Pi , a C.H.I.P. or an open router ? Try running ZeroNet on it and tell us how well ZeroNet works on your device. Do you like to write code? If you know Python, you can pick a task from our issue tracker on GitHub . You are also welcomed develop your own ideas. Before you start, please open a new discussion to let the community know, so you can make sure we can share our ideas to make the best out of it. Keep your coding style consistent. We ask you to follow our coding convention below. Do you like to offer financial support? You can donate bitcoins to support ZeroNet. Coding convention Follow PEP8 Simple is better than complex Premature optimization is the root of all evil Naming ClassNames: Capitalized, CamelCased functionNames: starts with lowercase, camelCased variable_names: lowercased, under_scored Variables file_path: File path relative to working dir (data/17ib6teRqdVgjB698T4cD1zDXKgPqpkrMg/css/all.css) inner_path: File relative to site dir (css/all.css) file_name: all.css file: Python file object privatekey: Private key for the site (without _ ) Source files directories and naming One class per file is preferred Source file name and directory comes from ClassName: WorkerManager class = Worker/WorkerManager.py","title":"Contributing to ZeroNet"},{"location":"en/help_zeronet/contributing/#contributing-to-zeronet","text":"Thank you for using ZeroNet. ZeroNet is a collaborative effort of 67+ decentralization enthusiasts just like you. We appreciate all users that catch bugs, improve documentation and have good ideas of designing new protocols. Here are a few guidelines we ask you to follow to get started with making your contribution.","title":"Contributing to ZeroNet"},{"location":"en/help_zeronet/contributing/#you-dont-have-to-contribute-source-code","text":"In fact, a majority of contributors do not submit source code. Even if you like to write programs, other types of contribution are also welcomed.","title":"You don\u2019t have to contribute source code"},{"location":"en/help_zeronet/contributing/#do-you-like-to-write","text":"Write about ZeroNet. Write tutorials to help people set things up. Help translate ZeroNet. Improve this documentation. This documentation is a written by many community members all over the world.","title":"Do you like to write?"},{"location":"en/help_zeronet/contributing/#do-you-like-helping-people","text":"Subscribe to our issue tracker on GitHub and help people solve problems. Join us on Gitter and IRC channel #zeronet @ freenode and help answer questions. Set up a seed box and help make the network faster.","title":"Do you like helping people?"},{"location":"en/help_zeronet/contributing/#do-you-like-to-make-websites","text":"Create new ZeroNet sites. Go ahead and make your own blog on ZeroNet. It is easy and costs little. \u201cContent is king!\u201d as NoFish puts. The network is worth nothing without content, so we need You to make it succeed.","title":"Do you like to make websites?"},{"location":"en/help_zeronet/contributing/#do-you-like-to-do-research","text":"Help us investigate our hard issues . Join our discussion of designing new features and protocols, such as I2P support and DHT support . Do you own a Raspberry Pi , a C.H.I.P. or an open router ? Try running ZeroNet on it and tell us how well ZeroNet works on your device.","title":"Do you like to do research?"},{"location":"en/help_zeronet/contributing/#do-you-like-to-write-code","text":"If you know Python, you can pick a task from our issue tracker on GitHub . You are also welcomed develop your own ideas. Before you start, please open a new discussion to let the community know, so you can make sure we can share our ideas to make the best out of it. Keep your coding style consistent. We ask you to follow our coding convention below.","title":"Do you like to write code?"},{"location":"en/help_zeronet/contributing/#do-you-like-to-offer-financial-support","text":"You can donate bitcoins to support ZeroNet.","title":"Do you like to offer financial support?"},{"location":"en/help_zeronet/contributing/#coding-convention","text":"Follow PEP8 Simple is better than complex Premature optimization is the root of all evil","title":"Coding convention"},{"location":"en/help_zeronet/contributing/#naming","text":"ClassNames: Capitalized, CamelCased functionNames: starts with lowercase, camelCased variable_names: lowercased, under_scored","title":"Naming"},{"location":"en/help_zeronet/contributing/#variables","text":"file_path: File path relative to working dir (data/17ib6teRqdVgjB698T4cD1zDXKgPqpkrMg/css/all.css) inner_path: File relative to site dir (css/all.css) file_name: all.css file: Python file object privatekey: Private key for the site (without _ )","title":"Variables"},{"location":"en/help_zeronet/contributing/#source-files-directories-and-naming","text":"One class per file is preferred Source file name and directory comes from ClassName: WorkerManager class = Worker/WorkerManager.py","title":"Source files directories and naming"},{"location":"en/help_zeronet/donate/","text":"Help to keep ZeroNet development alive ZeroNet: 2018 first half General donation towards ZeroNet development or using PayPal: Bitmessage support Send and receive Bitmessage messages using local client's XMLRPC API interface Benefits: Send your permission request to site owner via bitmessage Possible private messaging/commenting webui integration to sites Github issue Namecoin domain support (done in version 0.2.8) Use Namecoin domain names to access sites Benefits: Easier to remember site addresses Github issue DHT support Peer discovery using DHT Benefits: Peer discovery no longer relies on torrent network Ipv6 and Tor peer discovery Github issue Private sites Passworded or public key based peer auth to sites Benefits: Secure control over peers who has access to your site Github issue Full Tor support (done in version 0.3.5) Allow to seed sites and connect other peers using Tor network (Probably depends on DHT support) Benefits: Hiding your IP when distributing new content or downloading site Github issue Multiuser proxy support (done in version 0.2.7) User login/logout using bip32 master seed Benefits: Makes open ZeroNet proxies usable Use local ZeroNet more than one user Github issue Where does the donation go? The task's received donation goes directly to the developer(s) who successfully and properly integrates the feature (please add your plans and ideas to the issue before you start working on anything big). Sponsors Better OSX/Safari compatibility made possible by BrowserStack.com","title":"Help to keep ZeroNet development alive"},{"location":"en/help_zeronet/donate/#help-to-keep-zeronet-development-alive","text":"","title":"Help to keep ZeroNet development alive"},{"location":"en/help_zeronet/donate/#zeronet-2018-first-half","text":"General donation towards ZeroNet development or using PayPal:","title":"ZeroNet: 2018 first half"},{"location":"en/help_zeronet/donate/#bitmessage-support","text":"Send and receive Bitmessage messages using local client's XMLRPC API interface Benefits: Send your permission request to site owner via bitmessage Possible private messaging/commenting webui integration to sites Github issue","title":"Bitmessage support"},{"location":"en/help_zeronet/donate/#namecoin-domain-support-done-in-version-028","text":"Use Namecoin domain names to access sites Benefits: Easier to remember site addresses Github issue","title":"Namecoin domain support (done in version 0.2.8)"},{"location":"en/help_zeronet/donate/#dht-support","text":"Peer discovery using DHT Benefits: Peer discovery no longer relies on torrent network Ipv6 and Tor peer discovery Github issue","title":"DHT support"},{"location":"en/help_zeronet/donate/#private-sites","text":"Passworded or public key based peer auth to sites Benefits: Secure control over peers who has access to your site Github issue","title":"Private sites"},{"location":"en/help_zeronet/donate/#full-tor-support-done-in-version-035","text":"Allow to seed sites and connect other peers using Tor network (Probably depends on DHT support) Benefits: Hiding your IP when distributing new content or downloading site Github issue","title":"Full Tor support (done in version 0.3.5)"},{"location":"en/help_zeronet/donate/#multiuser-proxy-support-done-in-version-027","text":"User login/logout using bip32 master seed Benefits: Makes open ZeroNet proxies usable Use local ZeroNet more than one user Github issue","title":"Multiuser proxy support (done in version 0.2.7)"},{"location":"en/help_zeronet/donate/#where-does-the-donation-go","text":"The task's received donation goes directly to the developer(s) who successfully and properly integrates the feature (please add your plans and ideas to the issue before you start working on anything big).","title":"Where does the donation go?"},{"location":"en/help_zeronet/donate/#sponsors","text":"Better OSX/Safari compatibility made possible by BrowserStack.com","title":"Sponsors"},{"location":"en/help_zeronet/network_protocol/","text":"ZeroNet network protocol Every message is encoded using MessagePack Every request has 3 parameter: cmd : The request command req_id : The request's unique id (simple, incremented nonce per-connection), the client has to include this when reply to the command. params : Parameters for the request Example request: {\"cmd\": \"getFile\", \"req_id\": 1, \"params:\" {\"site\": \"1EU...\", \"inner_path\": \"content.json\", \"location\": 0}} Example response: {\"cmd\": \"response\", \"to\": 1, \"body\": \"content.json content\", \"location\": 1132, \"size\": 1132} Example error response: {\"cmd\": \"response\", \"to\": 1, \"error\": \"Unknown site\"} Handshake Every connection begins with a handshake by sending a request to the target network address: Parameter Description crypt Null/None, only used in respones crypt_supported An array of connection encryption methods supported by the client fileserver_port The client's fileserver port onion (Only used on tor) The client's onion address protocol The protocol version the client uses (v1 or v2) port_opened The client's client port open status peer_id (Not used on tor) The client's peer_id rev The client's revision number version The client's version target_ip The server's network address The target initialize the encryption on the socket based on crypt_supported , then return: Return key Description crypt The encryption to use crypt_supported An array of connection encryption methods supported by the server fileserver_port The server's fileserver port onion (Only used on tor) The server's onion address protocol The protocol version the server uses (v1 or v2) port_opened The server's client port open status peer_id (Not used on tor) The server's peer_id rev The server's revision number version The server's version target_ip The client's network address Note: No encryption used on .onion connections, as the Tor network provides the transport security by default. Note: You can also implicitly initialize SSL before the handshake if you can assume it supported by remote client. Example : Sent handshake: { cmd : handshake , req_id : 0 , params : { crypt : None , crypt_supported : [ tls-rsa ], fileserver_port : 15441 , onion : zp2ynpztyxj2kw7x , protocol : v2 , port_opened : True , peer_id : -ZN0056-DMK3XX30mOrw , rev : 2122 , target_ip : 192.168.1.13 , version : 0.5.6 } } Return: { protocol : v2 , onion : boot3rdez4rzn36x , to : 0, crypt : None, cmd : response , rev : 2092, crypt_supported : [], target_ip : zp2ynpztyxj2kw7x.onion , version : 0.5.5 , fileserver_port : 15441, port_opened : False, peer_id : } Peer requests getFile site , inner_path , location , [file_size] Request a file from the client Parameter Description site Site address (example: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr) inner_path File path relative to site directory location Request file from this byte (max 512 bytes got sent in a request, so you need multiple requests for larger files) file_size Total size of the requested file (optional) Return : Return key Description body The requested file content location The location of the last byte sent size Total size of the file streamFile site , inner_path , location , [file_size] Stream a file from the client Return : Return key Description stream_bytes The length of file data after the MessagePack payload To avoid having python-msgpack serialize large binary strings, the file body is appended directly after the MessagePack payload. For example, { cmd : streamFile , id : 1, inner_path : content.json , size : 1234} { cmd : response , to : 1, stream_bytes : 1234} content of the file ZeroNet implementation detail: For file segments larger than 256 kb, streaming is enabled by default. ping Checks if the client is still alive Return : Return key Description body Pong pex site , peers , need Exchange peers with the client. Peers packed to 6 bytes (4byte IP using inet_ntoa + 2byte for port) Parameter Description site Site address (example: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr) peers List of peers that the requester has (packed) peers_onion List of Tor Onion peers that the requester has (packed) need Number of peers the requester want Return : Return key Description peers List of IPv4 peers he has for the site (packed) peers_onion List of Tor Onion peers for this site (packed) Each element in the peers list is a packed IPv4 address. IP address Port 4 bytes 2 bytes Each element in the peers_onion list is a packed Tor Onion Service address. B32-decoded onion address Port binary_str[0:-2] binary_str[-2:] To restore the onion address, pass the first part through base64.b32encode and append .onion to the return value. update site , inner_path , body , [diffs] Update a site file. Parameter Description site Site address (example: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr) inner_path File path relative to site directory body Full content of the updated content.json diffs (optional) Diff opcodes for the modified files in the content.json Return : Return key Description ok Thanks message on successful update :) Diffs format A dict that contains the modifications Key: changed file's relative path to content.json (eg.: data.json ) Value: The list of diff opcodes for the file (eg.: [['=', 5], ['+', '\\nhello new line'], ['-', 6]] ) Possible diff opcodes: Opcode Description ['=', number of same characters] Have not changed part of the file (eg.: ['=', 5] ) ['+', new text] Added characters (eg.: ['+', '\\nhello new line'] ) ['-', number of removed characters] Full content of the updated file (eg.: ['-', 6] ) After the update received, the client tries to patch the files using the diffs. If it failes to match the sha hash provided by the content.json (had different version of the file) it automatically re-downloads the whole file from the sender of the update. Note: The patches are limited to 30KB per file and only used for .json files listModified site , since Lists the content.json files modified since the given parameter. It used to fetch the site's user submitted content. Parameter Description site Site address (example: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr) since List content.json files since this timestamp. Return : Return key Description modified_files Key: content.json inner_path Value: last modification date Example : zeronet.py --silent peerCmd 127.0 . 0.1 15441 listModified { site : 1BLogC9LN4oPDcruNz3qo1ysa133E9AGg8 , since : 1497507030} { to : 1 , cmd : response , modified_files : { data/users/1NM9k7VJfrb1UWw5agAvyRfSn3ws1wTJ5U/content.json : 1497579272 , data/users/1QEfmMwKVxgR4rkREbdJYjgUmF3Zy8pwHt/content.json : 1497565986 , data/users/16NS3rBdW9zpLmLSQoD8nLTtNVsRFtVBhd/content.json : 1497575039 , data/users/1CjXarXgvcNeCJ2nMQxUi4DRFWp3GEur2W/content.json : 1497513808 , data/users/1L5rGDgTs4W2V7gekSvJNhKa7XaHkVwotD/content.json : 1497615798 , data/users/1LWuc6JBhUGrKEAh1aPrPU85dEMcKmg3pS/content.json : 1497594716 , data/users/1KdnTJVBGzEZrJppFZtzfG9chukuMv8xSb/content.json : 1497584640 , data/users/1GMNmr2bDPbT4c8yVnyCoDHke52CNCdqAa/content.json : 1497614188 , data/users/1GRm9rED83Tkfi3iWS9m3LWHiRpPZehWLd/content.json : 1497827772 , data/users/12Ugp53jiMdvj1Kxa1w7c2LcXUBdGPs1oK/content.json : 1497692901 , data/users/1F6BMqittjWUStzUbRXm2kG2GQ3RdBLqFQ/content.json : 1497571485 , data/users/1GgNo3CmxPd7n2pMSF3uyqf1XHvgtTUqCe/content.json : 1497560829 , data/users/16nArdxrSaNThNp83kL8E6NLL9WD98iUne/content.json : 1497627929 , data/users/16CAJkbfNRxNJq4aKdrZ2MSYFfFGvQ8JPi/content.json : 1497664899 , data/users/1DrBS2sTD3BX5BBxG8eqYsxXSvGt9kc5HE/content.json : 1497632000 , data/users/19sggoAZ4hcorrrfWoFWP9rwfpVsL29cnZ/content.json : 1497928134 , data/users/1NYpJupegoTXL4cFpkNdLNJ4XaAhTNhPe1/content.json : 1497535771 , data/users/1R67TfYzNkCnh89EFfGmXn5LMb4hXaMRQ/content.json : 1497691787 , data/users/1C9HXUYFSVafLxanwkaFPZRcRgCEGsj2Cn/content.json : 1497572833 , data/users/1LgoHzNGWeijeZbJ8a1YgGjMCnjaM4BWG/content.json : 1497620232 , content.json : 1497623639 } } getHashfield site Get the client's downloaded optional file ids . Parameter Description site Site address (example: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr) Return : Return key Description hashfield_raw Optional file ids encoded using array.array(\"H\", [1000, 1001..]).tostring() Example : zeronet.py --silent peerCmd 192.168 . 1.13 15441 getHashfield { site : 1Gif7PqWTzVWDQ42Mo7np3zXmGAo3DXc7h } { to : 1, hashfield_raw : iG\\xde\\x02\\xc6o\\r;... , cmd : response } setHashfield site , hashfield_raw Set the list of optional file ids that the requester client has. Parameter Description site Site address (example: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr) hashfield_raw Optional file ids encoded using array.array(\"H\", [1000, 1001..]).tostring() Return : Return key Description ok Updated findHashIds site , hash_ids Queries if the client know any peer that has the requested hash_ids Parameter Description site Site address (example: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr) hash_ids List of optional file ids the client currently looking for Return : Return key Description peers Key: Optional file id Value: List of ipv4 peers encoded using socket.inet_aton(ip) + struct.pack(\"H\", port) peers_onion Key: Optional file id Value: List of onion peers encoded using base64.b32decode(onion.replace(\".onion\", \"\").upper()) + struct.pack(\"H\", port) Example : zeronet.py --silent peerCmd 192.168 . 1.13 15441 findHashIds { site : 1Gif7PqWTzVWDQ42Mo7np3zXmGAo3DXc7h , hash_ids : [59948, 29811]} { to : 1, peers : { 29811: [ S 9\\xd3Q , f\\x94\\x98N\\xa4 , gIB\\x90Q , \\xb4\\xady\\xf7Q ], 59948: [ x\\xcc \\xf6Q , S\\xa1\\xddkQ , \\x05\\xac\\xe8\\x8dQ , \\x05\\xc4\\xe1\\x93Q , Q\\x02\\xed\\nQ ] } , cmd : response , peers_onion : { 29811: [ \\xc7;A\\xce\\xbc\\xd9O\\xe2w Q ], 59948: [ \\xc7;A\\xce\\xbc\\xd9O\\xe2w Q ] } } Optional file id Integer representation of the first 4 character of the hash: int( ea2c2acb30bd5e1249021976536574dd3f0fd83340e023bb4e78d0d818adf30a [0:4], 16) 59948 checkport port Check requested port of the other peer. Parameter Description port Port which will be checked. Return : Return key Description status Status of the port (\"open\" or \"closed\") ip_external External IP of the requestor Bigfile Plugin getPieceFields site Returns all big file piecefield that client has for that site in a dict. Parameter Description site Requested site Return : Return key Description piecefields_packed Key: Bigfile's sha512/256 merkle root hash Value: Packed piecefield setPieceFields site , piecefields_packed Set the client's piecefields for that site. Parameter Description site Requested site piecefields_packed Key: Bigfile's sha512/256 merkle root hash Value: Packed piecefield Return : Return key Description ok Updated Bigfile piecefield Holds the the big files downloaded pieces information in a simple string with 1/0 values. (1 = Downloaded, 0 = Not downloaded) Example : 1110000001 means the file is sized 9-10MB and the client downloaded the first 3MB and the last 1MB at 1MB piecesize. Packed format : Turns the string to an list of int by counting the repeating characters starting with 1 . Example : 1110000001 to [3, 6, 1] , 0000000001 to [0, 9, 1] , 1111111111 to [10] After the conversion it turns it to more efficient typed array using array.array('H', piecefield) Bigfile merkle root During the big file hashing procedure, in addition to storing the per-piece sha512/256 hash digests in the piecemap file, the algorithm also calculates the SHA-512/256 merkle root of the file using the merkle-tools implementation. The merkle root is only used as an ID to identify the big file, not (yet) for verifying the pieces. Note : The merkle root is chosen to identify the file, instead of the file's actual SHA-512/256 hash. Obviously, using the latter results in hashing the same file twice. (once for piecemap once for the whole file) Note : The merkle root is not used to verify the integrity of the pieces or the big file, because doing so would take more bandwidth and space to transfer and store the merkle-proofs for partial verification, than the per-piece hash map file itself. Bigfile piecemap It holds the per-piece SHA-512/256 hashes. The piece size and the picemap filename is defined in content.json , eg.: ... files_optional : { bigfile.mp4 : { piece_size : 1048576, piecemap : bigfile.mp4.piecemap.msgpack , sha512 : d1f0d150e1e73bb1e684d370224315d7ba21e656189eb646ef7cc394d033bc2b , size : 42958831 }, ... Having the following data structure, the piecemap file is packed into the msgpack format: { b bigfile.mp4 : {b sha512_pieces : [ b e\\xde\\x0fx\\xec\\xc5LZ9\\x0e\\xe7\\x85E\\x1b\\xd5\\xe4C \\xe7req\\xe3 \\xff\\\\\\xbb\\xc8b\\xc2\\xc1\\x8e , b \\xef\\xe8\\xed\\xfe\\x16/\\x96\\xdb;;\\x06n[8_\\x06\\x9ak|\\xe1\\x9f\\xe1\\xaf\\x87\\x96\\xdd\\xfd\\x9bEf\\xd9! , b \\x1c\\xd6-\\x1f\\xce\\xde{\\xcd\\x01\\x93un =D\\x0brmB-\\xd1\\x8c\\xbf\\xfe\\xca\\x8a\\x1c\\xf60\\xbb\\xedD , b \\x1aQdF\\xd2\\xbc\\xdff{\\xb7\\x89\\xf2\\xd3\\r\\xa9\\xe1\\xefA-V\\x18\\xa4\\xc8e\\x13\\x88v\\x13\\\\ \\xfbW , ... ]} }","title":"ZeroNet network protocol"},{"location":"en/help_zeronet/network_protocol/#zeronet-network-protocol","text":"Every message is encoded using MessagePack Every request has 3 parameter: cmd : The request command req_id : The request's unique id (simple, incremented nonce per-connection), the client has to include this when reply to the command. params : Parameters for the request Example request: {\"cmd\": \"getFile\", \"req_id\": 1, \"params:\" {\"site\": \"1EU...\", \"inner_path\": \"content.json\", \"location\": 0}} Example response: {\"cmd\": \"response\", \"to\": 1, \"body\": \"content.json content\", \"location\": 1132, \"size\": 1132} Example error response: {\"cmd\": \"response\", \"to\": 1, \"error\": \"Unknown site\"}","title":"ZeroNet network protocol"},{"location":"en/help_zeronet/network_protocol/#handshake","text":"Every connection begins with a handshake by sending a request to the target network address: Parameter Description crypt Null/None, only used in respones crypt_supported An array of connection encryption methods supported by the client fileserver_port The client's fileserver port onion (Only used on tor) The client's onion address protocol The protocol version the client uses (v1 or v2) port_opened The client's client port open status peer_id (Not used on tor) The client's peer_id rev The client's revision number version The client's version target_ip The server's network address The target initialize the encryption on the socket based on crypt_supported , then return: Return key Description crypt The encryption to use crypt_supported An array of connection encryption methods supported by the server fileserver_port The server's fileserver port onion (Only used on tor) The server's onion address protocol The protocol version the server uses (v1 or v2) port_opened The server's client port open status peer_id (Not used on tor) The server's peer_id rev The server's revision number version The server's version target_ip The client's network address Note: No encryption used on .onion connections, as the Tor network provides the transport security by default. Note: You can also implicitly initialize SSL before the handshake if you can assume it supported by remote client. Example : Sent handshake: { cmd : handshake , req_id : 0 , params : { crypt : None , crypt_supported : [ tls-rsa ], fileserver_port : 15441 , onion : zp2ynpztyxj2kw7x , protocol : v2 , port_opened : True , peer_id : -ZN0056-DMK3XX30mOrw , rev : 2122 , target_ip : 192.168.1.13 , version : 0.5.6 } } Return: { protocol : v2 , onion : boot3rdez4rzn36x , to : 0, crypt : None, cmd : response , rev : 2092, crypt_supported : [], target_ip : zp2ynpztyxj2kw7x.onion , version : 0.5.5 , fileserver_port : 15441, port_opened : False, peer_id : }","title":"Handshake"},{"location":"en/help_zeronet/network_protocol/#peer-requests","text":"","title":"Peer requests"},{"location":"en/help_zeronet/network_protocol/#getfile-site-inner_path-location-file_size","text":"Request a file from the client Parameter Description site Site address (example: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr) inner_path File path relative to site directory location Request file from this byte (max 512 bytes got sent in a request, so you need multiple requests for larger files) file_size Total size of the requested file (optional) Return : Return key Description body The requested file content location The location of the last byte sent size Total size of the file","title":"getFile site, inner_path, location, [file_size]"},{"location":"en/help_zeronet/network_protocol/#streamfile-site-inner_path-location-file_size","text":"Stream a file from the client Return : Return key Description stream_bytes The length of file data after the MessagePack payload To avoid having python-msgpack serialize large binary strings, the file body is appended directly after the MessagePack payload. For example, { cmd : streamFile , id : 1, inner_path : content.json , size : 1234} { cmd : response , to : 1, stream_bytes : 1234} content of the file ZeroNet implementation detail: For file segments larger than 256 kb, streaming is enabled by default.","title":"streamFile site, inner_path, location, [file_size]"},{"location":"en/help_zeronet/network_protocol/#ping","text":"Checks if the client is still alive Return : Return key Description body Pong","title":"ping"},{"location":"en/help_zeronet/network_protocol/#pex-site-peers-need","text":"Exchange peers with the client. Peers packed to 6 bytes (4byte IP using inet_ntoa + 2byte for port) Parameter Description site Site address (example: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr) peers List of peers that the requester has (packed) peers_onion List of Tor Onion peers that the requester has (packed) need Number of peers the requester want Return : Return key Description peers List of IPv4 peers he has for the site (packed) peers_onion List of Tor Onion peers for this site (packed) Each element in the peers list is a packed IPv4 address. IP address Port 4 bytes 2 bytes Each element in the peers_onion list is a packed Tor Onion Service address. B32-decoded onion address Port binary_str[0:-2] binary_str[-2:] To restore the onion address, pass the first part through base64.b32encode and append .onion to the return value.","title":"pex site, peers, need"},{"location":"en/help_zeronet/network_protocol/#update-site-inner_path-body-diffs","text":"Update a site file. Parameter Description site Site address (example: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr) inner_path File path relative to site directory body Full content of the updated content.json diffs (optional) Diff opcodes for the modified files in the content.json Return : Return key Description ok Thanks message on successful update :)","title":"update site, inner_path, body, [diffs]"},{"location":"en/help_zeronet/network_protocol/#diffs-format","text":"A dict that contains the modifications Key: changed file's relative path to content.json (eg.: data.json ) Value: The list of diff opcodes for the file (eg.: [['=', 5], ['+', '\\nhello new line'], ['-', 6]] )","title":"Diffs format"},{"location":"en/help_zeronet/network_protocol/#possible-diff-opcodes","text":"Opcode Description ['=', number of same characters] Have not changed part of the file (eg.: ['=', 5] ) ['+', new text] Added characters (eg.: ['+', '\\nhello new line'] ) ['-', number of removed characters] Full content of the updated file (eg.: ['-', 6] ) After the update received, the client tries to patch the files using the diffs. If it failes to match the sha hash provided by the content.json (had different version of the file) it automatically re-downloads the whole file from the sender of the update. Note: The patches are limited to 30KB per file and only used for .json files","title":"Possible diff opcodes:"},{"location":"en/help_zeronet/network_protocol/#listmodified-site-since","text":"Lists the content.json files modified since the given parameter. It used to fetch the site's user submitted content. Parameter Description site Site address (example: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr) since List content.json files since this timestamp. Return : Return key Description modified_files Key: content.json inner_path Value: last modification date Example : zeronet.py --silent peerCmd 127.0 . 0.1 15441 listModified { site : 1BLogC9LN4oPDcruNz3qo1ysa133E9AGg8 , since : 1497507030} { to : 1 , cmd : response , modified_files : { data/users/1NM9k7VJfrb1UWw5agAvyRfSn3ws1wTJ5U/content.json : 1497579272 , data/users/1QEfmMwKVxgR4rkREbdJYjgUmF3Zy8pwHt/content.json : 1497565986 , data/users/16NS3rBdW9zpLmLSQoD8nLTtNVsRFtVBhd/content.json : 1497575039 , data/users/1CjXarXgvcNeCJ2nMQxUi4DRFWp3GEur2W/content.json : 1497513808 , data/users/1L5rGDgTs4W2V7gekSvJNhKa7XaHkVwotD/content.json : 1497615798 , data/users/1LWuc6JBhUGrKEAh1aPrPU85dEMcKmg3pS/content.json : 1497594716 , data/users/1KdnTJVBGzEZrJppFZtzfG9chukuMv8xSb/content.json : 1497584640 , data/users/1GMNmr2bDPbT4c8yVnyCoDHke52CNCdqAa/content.json : 1497614188 , data/users/1GRm9rED83Tkfi3iWS9m3LWHiRpPZehWLd/content.json : 1497827772 , data/users/12Ugp53jiMdvj1Kxa1w7c2LcXUBdGPs1oK/content.json : 1497692901 , data/users/1F6BMqittjWUStzUbRXm2kG2GQ3RdBLqFQ/content.json : 1497571485 , data/users/1GgNo3CmxPd7n2pMSF3uyqf1XHvgtTUqCe/content.json : 1497560829 , data/users/16nArdxrSaNThNp83kL8E6NLL9WD98iUne/content.json : 1497627929 , data/users/16CAJkbfNRxNJq4aKdrZ2MSYFfFGvQ8JPi/content.json : 1497664899 , data/users/1DrBS2sTD3BX5BBxG8eqYsxXSvGt9kc5HE/content.json : 1497632000 , data/users/19sggoAZ4hcorrrfWoFWP9rwfpVsL29cnZ/content.json : 1497928134 , data/users/1NYpJupegoTXL4cFpkNdLNJ4XaAhTNhPe1/content.json : 1497535771 , data/users/1R67TfYzNkCnh89EFfGmXn5LMb4hXaMRQ/content.json : 1497691787 , data/users/1C9HXUYFSVafLxanwkaFPZRcRgCEGsj2Cn/content.json : 1497572833 , data/users/1LgoHzNGWeijeZbJ8a1YgGjMCnjaM4BWG/content.json : 1497620232 , content.json : 1497623639 } }","title":"listModified site, since"},{"location":"en/help_zeronet/network_protocol/#gethashfield-site","text":"Get the client's downloaded optional file ids . Parameter Description site Site address (example: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr) Return : Return key Description hashfield_raw Optional file ids encoded using array.array(\"H\", [1000, 1001..]).tostring() Example : zeronet.py --silent peerCmd 192.168 . 1.13 15441 getHashfield { site : 1Gif7PqWTzVWDQ42Mo7np3zXmGAo3DXc7h } { to : 1, hashfield_raw : iG\\xde\\x02\\xc6o\\r;... , cmd : response }","title":"getHashfield site"},{"location":"en/help_zeronet/network_protocol/#sethashfield-site-hashfield_raw","text":"Set the list of optional file ids that the requester client has. Parameter Description site Site address (example: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr) hashfield_raw Optional file ids encoded using array.array(\"H\", [1000, 1001..]).tostring() Return : Return key Description ok Updated","title":"setHashfield site, hashfield_raw"},{"location":"en/help_zeronet/network_protocol/#findhashids-site-hash_ids","text":"Queries if the client know any peer that has the requested hash_ids Parameter Description site Site address (example: 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr) hash_ids List of optional file ids the client currently looking for Return : Return key Description peers Key: Optional file id Value: List of ipv4 peers encoded using socket.inet_aton(ip) + struct.pack(\"H\", port) peers_onion Key: Optional file id Value: List of onion peers encoded using base64.b32decode(onion.replace(\".onion\", \"\").upper()) + struct.pack(\"H\", port) Example : zeronet.py --silent peerCmd 192.168 . 1.13 15441 findHashIds { site : 1Gif7PqWTzVWDQ42Mo7np3zXmGAo3DXc7h , hash_ids : [59948, 29811]} { to : 1, peers : { 29811: [ S 9\\xd3Q , f\\x94\\x98N\\xa4 , gIB\\x90Q , \\xb4\\xady\\xf7Q ], 59948: [ x\\xcc \\xf6Q , S\\xa1\\xddkQ , \\x05\\xac\\xe8\\x8dQ , \\x05\\xc4\\xe1\\x93Q , Q\\x02\\xed\\nQ ] } , cmd : response , peers_onion : { 29811: [ \\xc7;A\\xce\\xbc\\xd9O\\xe2w Q ], 59948: [ \\xc7;A\\xce\\xbc\\xd9O\\xe2w Q ] } }","title":"findHashIds site, hash_ids"},{"location":"en/help_zeronet/network_protocol/#optional-file-id","text":"Integer representation of the first 4 character of the hash: int( ea2c2acb30bd5e1249021976536574dd3f0fd83340e023bb4e78d0d818adf30a [0:4], 16) 59948","title":"Optional file id"},{"location":"en/help_zeronet/network_protocol/#checkport-port","text":"Check requested port of the other peer. Parameter Description port Port which will be checked. Return : Return key Description status Status of the port (\"open\" or \"closed\") ip_external External IP of the requestor","title":"checkport port"},{"location":"en/help_zeronet/network_protocol/#bigfile-plugin","text":"","title":"Bigfile Plugin"},{"location":"en/help_zeronet/network_protocol/#getpiecefields-site","text":"Returns all big file piecefield that client has for that site in a dict. Parameter Description site Requested site Return : Return key Description piecefields_packed Key: Bigfile's sha512/256 merkle root hash Value: Packed piecefield","title":"getPieceFields site"},{"location":"en/help_zeronet/network_protocol/#setpiecefields-site-piecefields_packed","text":"Set the client's piecefields for that site. Parameter Description site Requested site piecefields_packed Key: Bigfile's sha512/256 merkle root hash Value: Packed piecefield Return : Return key Description ok Updated","title":"setPieceFields site, piecefields_packed"},{"location":"en/help_zeronet/network_protocol/#bigfile-piecefield","text":"Holds the the big files downloaded pieces information in a simple string with 1/0 values. (1 = Downloaded, 0 = Not downloaded) Example : 1110000001 means the file is sized 9-10MB and the client downloaded the first 3MB and the last 1MB at 1MB piecesize. Packed format : Turns the string to an list of int by counting the repeating characters starting with 1 . Example : 1110000001 to [3, 6, 1] , 0000000001 to [0, 9, 1] , 1111111111 to [10] After the conversion it turns it to more efficient typed array using array.array('H', piecefield)","title":"Bigfile piecefield"},{"location":"en/help_zeronet/network_protocol/#bigfile-merkle-root","text":"During the big file hashing procedure, in addition to storing the per-piece sha512/256 hash digests in the piecemap file, the algorithm also calculates the SHA-512/256 merkle root of the file using the merkle-tools implementation. The merkle root is only used as an ID to identify the big file, not (yet) for verifying the pieces. Note : The merkle root is chosen to identify the file, instead of the file's actual SHA-512/256 hash. Obviously, using the latter results in hashing the same file twice. (once for piecemap once for the whole file) Note : The merkle root is not used to verify the integrity of the pieces or the big file, because doing so would take more bandwidth and space to transfer and store the merkle-proofs for partial verification, than the per-piece hash map file itself.","title":"Bigfile merkle root"},{"location":"en/help_zeronet/network_protocol/#bigfile-piecemap","text":"It holds the per-piece SHA-512/256 hashes. The piece size and the picemap filename is defined in content.json , eg.: ... files_optional : { bigfile.mp4 : { piece_size : 1048576, piecemap : bigfile.mp4.piecemap.msgpack , sha512 : d1f0d150e1e73bb1e684d370224315d7ba21e656189eb646ef7cc394d033bc2b , size : 42958831 }, ... Having the following data structure, the piecemap file is packed into the msgpack format: { b bigfile.mp4 : {b sha512_pieces : [ b e\\xde\\x0fx\\xec\\xc5LZ9\\x0e\\xe7\\x85E\\x1b\\xd5\\xe4C \\xe7req\\xe3 \\xff\\\\\\xbb\\xc8b\\xc2\\xc1\\x8e , b \\xef\\xe8\\xed\\xfe\\x16/\\x96\\xdb;;\\x06n[8_\\x06\\x9ak|\\xe1\\x9f\\xe1\\xaf\\x87\\x96\\xdd\\xfd\\x9bEf\\xd9! , b \\x1c\\xd6-\\x1f\\xce\\xde{\\xcd\\x01\\x93un =D\\x0brmB-\\xd1\\x8c\\xbf\\xfe\\xca\\x8a\\x1c\\xf60\\xbb\\xedD , b \\x1aQdF\\xd2\\xbc\\xdff{\\xb7\\x89\\xf2\\xd3\\r\\xa9\\xe1\\xefA-V\\x18\\xa4\\xc8e\\x13\\x88v\\x13\\\\ \\xfbW , ... ]} }","title":"Bigfile piecemap"},{"location":"en/site_development/cert_authority/","text":"Certificate Authority An account without password? A certificate for me? You realize the ID system of ZeroNet does not conform to convention. In this section, you are going to learn about how user certificate and certificate authority work in ZeroNet. What does a certificate authority do? In ZeroNet, everything is signed by Bitcoin signing keys. A certificate provides a unique and memorizable name for a Bitcoin address. A certificate authority (or an ID provider) is responsible for proving the relationship between a unique friendly name and a Bitcoin address. Certificate format Body The body of a certificate contains a Bitcoin address, a portal type, and a memorizable user name. [BitcoinAddress]#[PortalType]/[UserName] Example: 1H28iygiKXe3GUMcD77HiifVqtf3858Aft#web/hellozeronet Bitcoin address: 1H28iygiKXe3GUMcD77HiifVqtf3858Aft Portal type: web User name: hellozeronet General rules: The Bitcoin address, the portal type and the user name must not contain the character # , @ or / Only 0-9 and a-z are allowed in a user name. All English letters in a user name must be in lower case. Characters not in the allowed set must not be used as parts of a user name. A user name should not be too long. A user name should be legible and should not interfere with user interface rendering. A user name must be unique in the pool of all registered user names. Signature A certificate signing algorithm loads a secret signing key and generates a deterministic Bitcoin signature for the body. From the source code: sign = os . popen ( python zeronet.py --debug cryptSign %s #bitmsg/ %s %s 2 1 % ( auth_address , user_name , config . site_privatekey )) . readlines ()[ - 1 ] . strip () Certificate By looking at the source code of ZeroID, we know how a certificate is stored in its public database. data [ users ][ user_name ] = bitmsg, %s , %s % ( auth_address , sign ) Example: hellozeronet : web,1H28iygiKXe3GUMcD77HiifVqtf3858Aft,HA2A+iKekECD3hasrsN8IrR86BnXQ63kPH+9A85JLO9hLUpRJTBn62UfnuuF92B9CIc6+EewAIqzIn9UoVq2LPA= A certificate can be stored in various formats. However, all formats must include: The Bitcoin address: 1H28iygiKXe3GUMcD77HiifVqtf3858Aft The portal type: web The user name: hellozeronet The signature from authority: HA2A+iKekECD3hasrsN8IrR86BnXQ63kPH+9A85JLO9hLUpRJTBn62UfnuuF92B9CIc6+EewAIqzIn9UoVq2LPA= Usage in content.json Site owners can choose which certificate authorities to trust. The Blue Hub, for example, accepts certificates signed by ZeroID. This rule is defined in its data/users/content.json The ID provider has a friendly name: zeroid.bit The public key digest of the ID provider is: 1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz user_contents : { cert_signers : { zeroid.bit : [ 1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz ] } } Every user presents his certificate in the manifest file in his Bitcoin folder. For example, data/users/1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj/content.json says: { address : 1BLueGvui1GdbtsjcKqCf4F67uKfritG49 , cert_auth_type : web , cert_sign : HPiZsWEJ5eLnspUj8nQ75WXbSanLz0YhQf5KJDq+4bWe6wNW98Vv9PXNyPDNu2VX4bCEXhRC65pS3CM7cOrjjik= , cert_user_id : nofish@zeroid.bit , files : { data.json : { sha512 : 8e597412a2bc2726ac9a1ee85428fb3a94b09f4e7a3f5f589119973231417b15 , size : 21422 } }, inner_path : data/users/1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj/content.json , modified : 1492458379 , signs : { 1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj : G8kaZIGAstsiWLVY20e2ogJQi4OO+QuwqJ9GTj3gz7YleST/jst7RQH7hDn0uf8BJMBjFs35H3LPhNHHj4jueh8= } } Site specific: Expected site URL: \"address\": \"1BLueGvui1GdbtsjcKqCf4F67uKfritG49\" Expected file path: \"inner_path\": \"data/users/1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj/content.json\" Certificate information: ID provider: zeroid.bit User name: nofish User Bitcoin address: 1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj Portal type: web Signature from ID provider: HPiZsWEJ5eLnspUj8nQ75WXbSanLz0YhQf5KJDq+4bWe6wNW98Vv9PXNyPDNu2VX4bCEXhRC65pS3CM7cOrjjik= The verifying process The verifying algorithm reads data/users/content.json to determine what is the expected site for the user content. The verifying algorithm reads data/users/content.json to look up the public key digest of the ID provider. Given a user Bitcoin address, a portal type and a user name, the verifying algorithm reconstructs the body of the certificate. The verifying algorithm checks the signature from the ID provider, with the public key defined in data/users/content.json , to ensure the authenticity of the certificate body. The verifying algorithm loads the user public key and checks the authenticity of the user content. Features and limitations of certificate authorities A certificate authority provides memorizable names for user public key digests. It also helps mitigate spam and unsolicited content. A user does not have to give away secret information such as passwords. In addition, a user only has to authenticate once. A certificate authority does not have to be approved by any ZeroNet developers. A site owner can choose which certificate authorities to trust for the sake of user content quality. A certificate authority is responsible for maintaining its user name pool. ZeroID does not revoke or renew certificates. Can I live without certificate authorities? Generally, a certificate is required when you add things to someone else's site. You do not need a certificate when you are modifying your own site.","title":"Certificate Authority"},{"location":"en/site_development/cert_authority/#certificate-authority","text":"An account without password? A certificate for me? You realize the ID system of ZeroNet does not conform to convention. In this section, you are going to learn about how user certificate and certificate authority work in ZeroNet.","title":"Certificate Authority"},{"location":"en/site_development/cert_authority/#what-does-a-certificate-authority-do","text":"In ZeroNet, everything is signed by Bitcoin signing keys. A certificate provides a unique and memorizable name for a Bitcoin address. A certificate authority (or an ID provider) is responsible for proving the relationship between a unique friendly name and a Bitcoin address.","title":"What does a certificate authority do?"},{"location":"en/site_development/cert_authority/#certificate-format","text":"","title":"Certificate format"},{"location":"en/site_development/cert_authority/#body","text":"The body of a certificate contains a Bitcoin address, a portal type, and a memorizable user name. [BitcoinAddress]#[PortalType]/[UserName] Example: 1H28iygiKXe3GUMcD77HiifVqtf3858Aft#web/hellozeronet Bitcoin address: 1H28iygiKXe3GUMcD77HiifVqtf3858Aft Portal type: web User name: hellozeronet General rules: The Bitcoin address, the portal type and the user name must not contain the character # , @ or / Only 0-9 and a-z are allowed in a user name. All English letters in a user name must be in lower case. Characters not in the allowed set must not be used as parts of a user name. A user name should not be too long. A user name should be legible and should not interfere with user interface rendering. A user name must be unique in the pool of all registered user names.","title":"Body"},{"location":"en/site_development/cert_authority/#signature","text":"A certificate signing algorithm loads a secret signing key and generates a deterministic Bitcoin signature for the body. From the source code: sign = os . popen ( python zeronet.py --debug cryptSign %s #bitmsg/ %s %s 2 1 % ( auth_address , user_name , config . site_privatekey )) . readlines ()[ - 1 ] . strip ()","title":"Signature"},{"location":"en/site_development/cert_authority/#certificate","text":"By looking at the source code of ZeroID, we know how a certificate is stored in its public database. data [ users ][ user_name ] = bitmsg, %s , %s % ( auth_address , sign ) Example: hellozeronet : web,1H28iygiKXe3GUMcD77HiifVqtf3858Aft,HA2A+iKekECD3hasrsN8IrR86BnXQ63kPH+9A85JLO9hLUpRJTBn62UfnuuF92B9CIc6+EewAIqzIn9UoVq2LPA= A certificate can be stored in various formats. However, all formats must include: The Bitcoin address: 1H28iygiKXe3GUMcD77HiifVqtf3858Aft The portal type: web The user name: hellozeronet The signature from authority: HA2A+iKekECD3hasrsN8IrR86BnXQ63kPH+9A85JLO9hLUpRJTBn62UfnuuF92B9CIc6+EewAIqzIn9UoVq2LPA=","title":"Certificate"},{"location":"en/site_development/cert_authority/#usage-in-contentjson","text":"Site owners can choose which certificate authorities to trust. The Blue Hub, for example, accepts certificates signed by ZeroID. This rule is defined in its data/users/content.json The ID provider has a friendly name: zeroid.bit The public key digest of the ID provider is: 1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz user_contents : { cert_signers : { zeroid.bit : [ 1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz ] } } Every user presents his certificate in the manifest file in his Bitcoin folder. For example, data/users/1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj/content.json says: { address : 1BLueGvui1GdbtsjcKqCf4F67uKfritG49 , cert_auth_type : web , cert_sign : HPiZsWEJ5eLnspUj8nQ75WXbSanLz0YhQf5KJDq+4bWe6wNW98Vv9PXNyPDNu2VX4bCEXhRC65pS3CM7cOrjjik= , cert_user_id : nofish@zeroid.bit , files : { data.json : { sha512 : 8e597412a2bc2726ac9a1ee85428fb3a94b09f4e7a3f5f589119973231417b15 , size : 21422 } }, inner_path : data/users/1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj/content.json , modified : 1492458379 , signs : { 1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj : G8kaZIGAstsiWLVY20e2ogJQi4OO+QuwqJ9GTj3gz7YleST/jst7RQH7hDn0uf8BJMBjFs35H3LPhNHHj4jueh8= } } Site specific: Expected site URL: \"address\": \"1BLueGvui1GdbtsjcKqCf4F67uKfritG49\" Expected file path: \"inner_path\": \"data/users/1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj/content.json\" Certificate information: ID provider: zeroid.bit User name: nofish User Bitcoin address: 1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj Portal type: web Signature from ID provider: HPiZsWEJ5eLnspUj8nQ75WXbSanLz0YhQf5KJDq+4bWe6wNW98Vv9PXNyPDNu2VX4bCEXhRC65pS3CM7cOrjjik=","title":"Usage in content.json"},{"location":"en/site_development/cert_authority/#the-verifying-process","text":"The verifying algorithm reads data/users/content.json to determine what is the expected site for the user content. The verifying algorithm reads data/users/content.json to look up the public key digest of the ID provider. Given a user Bitcoin address, a portal type and a user name, the verifying algorithm reconstructs the body of the certificate. The verifying algorithm checks the signature from the ID provider, with the public key defined in data/users/content.json , to ensure the authenticity of the certificate body. The verifying algorithm loads the user public key and checks the authenticity of the user content.","title":"The verifying process"},{"location":"en/site_development/cert_authority/#features-and-limitations-of-certificate-authorities","text":"A certificate authority provides memorizable names for user public key digests. It also helps mitigate spam and unsolicited content. A user does not have to give away secret information such as passwords. In addition, a user only has to authenticate once. A certificate authority does not have to be approved by any ZeroNet developers. A site owner can choose which certificate authorities to trust for the sake of user content quality. A certificate authority is responsible for maintaining its user name pool. ZeroID does not revoke or renew certificates.","title":"Features and limitations of certificate authorities"},{"location":"en/site_development/cert_authority/#can-i-live-without-certificate-authorities","text":"Generally, a certificate is required when you add things to someone else's site. You do not need a certificate when you are modifying your own site.","title":"Can I live without certificate authorities?"},{"location":"en/site_development/content_json/","text":"Structure of content.json Every ZeroNet site has a content.json file. ( Example content.json file ) This file will carry, among other things, a list of all files on your site and a signature created with your private key. This is used to ensure authenticity of site files and avoid tampering (ie: only you, or people you trust, can update your site's content). Here is a list of supported content.json keys: Generated automatically These keys are added automatically when the site is created or cloned. address Your site address Example : 1TaLk3zM7ZRskJvrh3ZNCDVGXvkJusPKQ address_index The site address's BIP32 sub-key index of your BIP32 seed. Auto-added when you clone a site. It allows recovery of the site's privatekey from your BIP32 seed. Example : 30926910 cloned_from Only for cloned sites. The site address where the site is cloned from. Example : 1BLogC9LN4oPDcruNz3qo1ysa133E9AGg8 clone_root Only for cloned sites. The sub-directory on the site which this was cloned from. Example : template-new files Size and sha512 hashes of automatically downloaded files contained in your site. Automatically added by the command zeronet.py siteSign siteaddress privatekey . Example : css/all.css : { sha512 : 869b09328f07bac538c313c4702baa5276544346418378199fa5cef644c139e8 , size : 148208 } files_optional Size and sha512 hashes of optional files contained in your site. Automatically added by the command zeronet.py siteSign siteaddress privatekey . Example : data/myvideo.mp4 : { sha512 : 538c09328aa52765443464135cef644c144346418378199fa5cef61837819538 , size : 832103 } modified Time when the content.json was generated. Example : 1425857522.076 sign (deprecated) ECDSA sign of the content.json file content. (keys sorted, without whitespace and the sign and signers_sign nodes). For backward compatibility, will be removed soon. Example : sign : [ 43117356513690007125104018825100786623580298637039067305407092800990252156956 , 94139380599940414070721501960181245022427741524702752954181461080408625270000 ], signers_sign Possible signer addresses for the root content.json signed using the site address private key. Multiple entries are allowed here, allowing for site Multisig functionality. Format of the signed string : [number_of_signers_required]:[signer address],[signer address] Example : signs_required : 1 : 1 PcxwuHYxuJEmM4ydtB1vbiAY6WkNgsz9G , 1 CK6KHY6MHgYvmRQ4PAafKYDrg1ejbH1cE signers_sign : MEUCIQDuz + CzOVvFkv1P2ra9i5E1p1G0 /1cOGecm7GpLpMLhuwIgBIbCL0YHXD1S2+x48QS5VO/ rISrkdLiUR + o + x1X0y1A = The above signed message is signed using the address \"1PcxwuHYxuJEmM4ydtB1vbiAY6WkNgsz9G\". signs ECDSA signature for the the content.json file content: sign , signs JSON nodes removed JSON dumped with keys sorted alphabetically, without whitespace Signature generated on the dumped data, using Electrum Bitcoin message signature format: Message encoding : sha256(\"\\x18\" || \"Bitcoin Signed Message:\\n\" || num_to_var_int(len(message)) || message) Serialization format : recovery_id || r || s , where 27 \u2264 recovery_id \u2264 30; signature length = 1 + 32 + 32 = 65 bytes. Double vertical bar || denotes byte concatenation. Example : signs : { 1TaLk3zM7ZRskJvrh3ZNCDVGXvkJusPKQ : G6/QXFKvACPQ7LhoZG4fgqmeOSK99vGM2arVWkm9pV/WPCfc2ulv6iuQnuzw4v5z82qWswcRq907VPdBsdb9VRo= }, zeronet_version The ZeroNet version used to generate content.json file. Example : 0.2.5 Optional Settings These options can be added if the functionality is needed. background-color Background color of the wrapper Example : #F5F5F5 cloneable Allow to clone the site if true . To make your site properly cloneable you have to have a separate folder of data files for a clean start (e.g. without any blog posts). To do this you have to add the -default postfix to your data files and directories. During the cloning process, only directories with the -default postfix are copied. The postfix is removed from the new site. description Description of your site, displayed under the site title on ZeroHello. Example : Decentralized forum demo domain Namecoin domain name of your site. ZeroHello will link to this if the user has Zeroname plugin enabled. Example : Blog.ZeroNetwork.bit ignore Do not sign files matching this pattern. Example : ((js|css)/(?!all.(js|css))|data/users/.*) (ignore all js and css files except all.js and all.css and don't add anything from the data/users/ directory) Note: Some restrictions apply to regular expressions. includes Include another content.json in the site. This is typically used for subsequent content.json files that are used to govern user data. Example : includes : { data/users/content.json : { signers : [ # Possible signers address for the file 1LSxsKfC9S9TVXGGNSM3vPHjyW82jgCX5f ], signers_required : 1 # The *number* of Valid signs required to accept the file (Multisig possibility), files_allowed : data.json , # Preg pattern for the allowed files in the include file includes_allowed : false , # Whether nested includes are allowed max_size : 10000 , # Max allowed size of included content.json and files it signs (in bytes) } } merged_type The type of merger this site is a part of. Example : ZeroMe optional Preg pattern of optional files. Example : (data/mp4/.*|updater/.*) (everything in data/mp4 and updater directory is optional) Note: Some restrictions apply to regular expressions. signs_required The number of valid signs required to accept the file. Allows for Multisig functionality. Example : 1 title The site's title, visible in the browser title and on ZeroHello. Example : ZeroTalk translate Files need be translated. (use language json files in the languages directory) Example : [\"index.html\", \"js/all.js\"] favicon The site's favicon. Replaces the default ZeroNet logo with a site-specific icon. Can be a .ico, .png, .svg, etc. Example : favicon.ico user_contents Rules of allowed user content within the current directory. Node Description cert_signers Accepted domains and valid signer addresses permission_rules Allowed file names and total directory size based on cert domain or authorization method permissions Per-user permissions. (false = banned user) Example : user_contents : { cert_signers : { zeroid.bit : [ 1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz ] }, permission_rules : { .* : { files_allowed : data.json , max_size : 10000 }, bitid/.*@zeroid.bit : { max_size : 40000 }, bitmsg/.*@zeroid.bit : { max_size : 15000 } }, permissions : { bad@zeroid.bit : false , nofish@zeroid.bit : { max_size : 100000 } } } Note: Some restrictions apply to regular expressions. viewport Content for the viewport meta tag. (Used for mobile-friendly pages) Example : width=device-width, initial-scale=1.0 Regular expression limitations To avoid the ReDoS algorithmic complexity attack, the following restrictions are applied to each pattern: . character is mandatory before repetition characters of *,+,{ Maximum 9 repetitions are allowed in a single pattern The maximum length of a pattern is 255 characters Examples: ((?!json).)*$ not allowed, because of ) before the * character. Possible fix: .*(?!json)$ (.*.epub|.*.jpg|.*.jpeg|.*.png|data/.*.gif|.*.avi|.*.ogg|.*.webm|.*.mp4|.*.mp3|.*.mkv|.*.eot) not allowed, because it has 12 .* repetition patterns. Possible fix: .*(epub|jpg|jpeg|png|data/gif|avi|ogg|webm|mp4|mp3|mkv|eot)","title":"Structure of content.json"},{"location":"en/site_development/content_json/#structure-of-contentjson","text":"Every ZeroNet site has a content.json file. ( Example content.json file ) This file will carry, among other things, a list of all files on your site and a signature created with your private key. This is used to ensure authenticity of site files and avoid tampering (ie: only you, or people you trust, can update your site's content). Here is a list of supported content.json keys:","title":"Structure of content.json"},{"location":"en/site_development/content_json/#generated-automatically","text":"These keys are added automatically when the site is created or cloned.","title":"Generated automatically"},{"location":"en/site_development/content_json/#address","text":"Your site address Example : 1TaLk3zM7ZRskJvrh3ZNCDVGXvkJusPKQ","title":"address"},{"location":"en/site_development/content_json/#address_index","text":"The site address's BIP32 sub-key index of your BIP32 seed. Auto-added when you clone a site. It allows recovery of the site's privatekey from your BIP32 seed. Example : 30926910","title":"address_index"},{"location":"en/site_development/content_json/#cloned_from","text":"Only for cloned sites. The site address where the site is cloned from. Example : 1BLogC9LN4oPDcruNz3qo1ysa133E9AGg8","title":"cloned_from"},{"location":"en/site_development/content_json/#clone_root","text":"Only for cloned sites. The sub-directory on the site which this was cloned from. Example : template-new","title":"clone_root"},{"location":"en/site_development/content_json/#files","text":"Size and sha512 hashes of automatically downloaded files contained in your site. Automatically added by the command zeronet.py siteSign siteaddress privatekey . Example : css/all.css : { sha512 : 869b09328f07bac538c313c4702baa5276544346418378199fa5cef644c139e8 , size : 148208 }","title":"files"},{"location":"en/site_development/content_json/#files_optional","text":"Size and sha512 hashes of optional files contained in your site. Automatically added by the command zeronet.py siteSign siteaddress privatekey . Example : data/myvideo.mp4 : { sha512 : 538c09328aa52765443464135cef644c144346418378199fa5cef61837819538 , size : 832103 }","title":"files_optional"},{"location":"en/site_development/content_json/#modified","text":"Time when the content.json was generated. Example : 1425857522.076","title":"modified"},{"location":"en/site_development/content_json/#sign-deprecated","text":"ECDSA sign of the content.json file content. (keys sorted, without whitespace and the sign and signers_sign nodes). For backward compatibility, will be removed soon. Example : sign : [ 43117356513690007125104018825100786623580298637039067305407092800990252156956 , 94139380599940414070721501960181245022427741524702752954181461080408625270000 ],","title":"sign (deprecated)"},{"location":"en/site_development/content_json/#signers_sign","text":"Possible signer addresses for the root content.json signed using the site address private key. Multiple entries are allowed here, allowing for site Multisig functionality. Format of the signed string : [number_of_signers_required]:[signer address],[signer address] Example : signs_required : 1 : 1 PcxwuHYxuJEmM4ydtB1vbiAY6WkNgsz9G , 1 CK6KHY6MHgYvmRQ4PAafKYDrg1ejbH1cE signers_sign : MEUCIQDuz + CzOVvFkv1P2ra9i5E1p1G0 /1cOGecm7GpLpMLhuwIgBIbCL0YHXD1S2+x48QS5VO/ rISrkdLiUR + o + x1X0y1A = The above signed message is signed using the address \"1PcxwuHYxuJEmM4ydtB1vbiAY6WkNgsz9G\".","title":"signers_sign"},{"location":"en/site_development/content_json/#signs","text":"ECDSA signature for the the content.json file content: sign , signs JSON nodes removed JSON dumped with keys sorted alphabetically, without whitespace Signature generated on the dumped data, using Electrum Bitcoin message signature format: Message encoding : sha256(\"\\x18\" || \"Bitcoin Signed Message:\\n\" || num_to_var_int(len(message)) || message) Serialization format : recovery_id || r || s , where 27 \u2264 recovery_id \u2264 30; signature length = 1 + 32 + 32 = 65 bytes. Double vertical bar || denotes byte concatenation. Example : signs : { 1TaLk3zM7ZRskJvrh3ZNCDVGXvkJusPKQ : G6/QXFKvACPQ7LhoZG4fgqmeOSK99vGM2arVWkm9pV/WPCfc2ulv6iuQnuzw4v5z82qWswcRq907VPdBsdb9VRo= },","title":"signs"},{"location":"en/site_development/content_json/#zeronet_version","text":"The ZeroNet version used to generate content.json file. Example : 0.2.5","title":"zeronet_version"},{"location":"en/site_development/content_json/#optional-settings","text":"These options can be added if the functionality is needed.","title":"Optional Settings"},{"location":"en/site_development/content_json/#background-color","text":"Background color of the wrapper Example : #F5F5F5","title":"background-color"},{"location":"en/site_development/content_json/#cloneable","text":"Allow to clone the site if true . To make your site properly cloneable you have to have a separate folder of data files for a clean start (e.g. without any blog posts). To do this you have to add the -default postfix to your data files and directories. During the cloning process, only directories with the -default postfix are copied. The postfix is removed from the new site.","title":"cloneable"},{"location":"en/site_development/content_json/#description","text":"Description of your site, displayed under the site title on ZeroHello. Example : Decentralized forum demo","title":"description"},{"location":"en/site_development/content_json/#domain","text":"Namecoin domain name of your site. ZeroHello will link to this if the user has Zeroname plugin enabled. Example : Blog.ZeroNetwork.bit","title":"domain"},{"location":"en/site_development/content_json/#ignore","text":"Do not sign files matching this pattern. Example : ((js|css)/(?!all.(js|css))|data/users/.*) (ignore all js and css files except all.js and all.css and don't add anything from the data/users/ directory) Note: Some restrictions apply to regular expressions.","title":"ignore"},{"location":"en/site_development/content_json/#includes","text":"Include another content.json in the site. This is typically used for subsequent content.json files that are used to govern user data. Example : includes : { data/users/content.json : { signers : [ # Possible signers address for the file 1LSxsKfC9S9TVXGGNSM3vPHjyW82jgCX5f ], signers_required : 1 # The *number* of Valid signs required to accept the file (Multisig possibility), files_allowed : data.json , # Preg pattern for the allowed files in the include file includes_allowed : false , # Whether nested includes are allowed max_size : 10000 , # Max allowed size of included content.json and files it signs (in bytes) } }","title":"includes"},{"location":"en/site_development/content_json/#merged_type","text":"The type of merger this site is a part of. Example : ZeroMe","title":"merged_type"},{"location":"en/site_development/content_json/#optional","text":"Preg pattern of optional files. Example : (data/mp4/.*|updater/.*) (everything in data/mp4 and updater directory is optional) Note: Some restrictions apply to regular expressions.","title":"optional"},{"location":"en/site_development/content_json/#signs_required","text":"The number of valid signs required to accept the file. Allows for Multisig functionality. Example : 1","title":"signs_required"},{"location":"en/site_development/content_json/#title","text":"The site's title, visible in the browser title and on ZeroHello. Example : ZeroTalk","title":"title"},{"location":"en/site_development/content_json/#translate","text":"Files need be translated. (use language json files in the languages directory) Example : [\"index.html\", \"js/all.js\"]","title":"translate"},{"location":"en/site_development/content_json/#favicon","text":"The site's favicon. Replaces the default ZeroNet logo with a site-specific icon. Can be a .ico, .png, .svg, etc. Example : favicon.ico","title":"favicon"},{"location":"en/site_development/content_json/#user_contents","text":"Rules of allowed user content within the current directory. Node Description cert_signers Accepted domains and valid signer addresses permission_rules Allowed file names and total directory size based on cert domain or authorization method permissions Per-user permissions. (false = banned user) Example : user_contents : { cert_signers : { zeroid.bit : [ 1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz ] }, permission_rules : { .* : { files_allowed : data.json , max_size : 10000 }, bitid/.*@zeroid.bit : { max_size : 40000 }, bitmsg/.*@zeroid.bit : { max_size : 15000 } }, permissions : { bad@zeroid.bit : false , nofish@zeroid.bit : { max_size : 100000 } } } Note: Some restrictions apply to regular expressions.","title":"user_contents"},{"location":"en/site_development/content_json/#viewport","text":"Content for the viewport meta tag. (Used for mobile-friendly pages) Example : width=device-width, initial-scale=1.0","title":"viewport"},{"location":"en/site_development/content_json/#regular-expression-limitations","text":"To avoid the ReDoS algorithmic complexity attack, the following restrictions are applied to each pattern: . character is mandatory before repetition characters of *,+,{ Maximum 9 repetitions are allowed in a single pattern The maximum length of a pattern is 255 characters","title":"Regular expression limitations"},{"location":"en/site_development/content_json/#examples","text":"((?!json).)*$ not allowed, because of ) before the * character. Possible fix: .*(?!json)$ (.*.epub|.*.jpg|.*.jpeg|.*.png|data/.*.gif|.*.avi|.*.ogg|.*.webm|.*.mp4|.*.mp3|.*.mkv|.*.eot) not allowed, because it has 12 .* repetition patterns. Possible fix: .*(epub|jpg|jpeg|png|data/gif|avi|ogg|webm|mp4|mp3|mkv|eot)","title":"Examples:"},{"location":"en/site_development/dbschema_json/","text":"Structure of dbschema.json Example dbschema.json file The code below will do the following: If an updated data/users/*/data.json file is received (eg.: a user posted something): Every row in data[\"topics\"] is loaded to the topic table Every key in data[\"comment_votes\"] is loaded to the comment_vote table as comment_hash col and the values stored in same line as vote If an updated data/users/content.json file is received (eg.: new user created): The \"user_id\", \"user_name\", \"max_size\", \"added\" key in value of content[\"include\"] is loaded into the user table and the key is stored as path Note: Some restriction apply to regular expressions to avoid possible ReDoS vulnerability. { db_name : ZeroTalk , # Database name (only used for debugging) db_file : data/users/zerotalk.db , # Database file relative to site s directory version : 2 , # 1 = Json table has path column that includes directory and filename # 2 = Json table has separate directory and file_name column # 3 = Same as version 2, but also has site column (for merger sites) maps : { # Json to database mappings .*/data.json : { # Regex pattern of file relative to db_file to_table : [ # Load values to table { node : topics , # Reading data.json[topics] key value table : topic # Feeding data to topic table }, { node : comment_votes , # Reading data.json[comment_votes] key value table : comment_vote , # Feeding data to comment_vote table key_col : comment_hash , # data.json[comment_votes] is a simple dict, the keys of the # dict are loaded to comment_vote table comment_hash column val_col : vote # The data.json [ comment_votes ] dict values loaded to comment_vote table vote column } ], to_keyvalue : [ next_message_id , next_topic_id ] # Load data.json [ next_topic_id ] to keyvalue table # (key : next_message_id , value: data.json[next_message_id] value) }, content.json : { to_table : [ { node : includes , table : user , key_col : path , import_cols : [ user_id , user_name , max_size , added ], # Only import these columns to user table replaces : { path : { content.json : data.json } # Replace content.json to data.json in the # value of path column (required for joining) } } ], to_json_table : [ cert_auth_type , cert_user_id ] # Save cert_auth_type and cert_user_id directly to json table (easier and faster data queries) } }, tables : { # Table definitions topic : { # Define topic table cols : [ # Cols of the table [ topic_id , INTEGER ], [ title , TEXT ], [ body , TEXT ], [ type , TEXT ], [ parent_topic_hash , TEXT ], [ added , DATETIME ], [ json_id , INTEGER REFERENCES json (json_id) ] ], indexes : [ CREATE UNIQUE INDEX topic_key ON topic(topic_id, json_id) ], # Indexes automatically created schema_changed : 1426195822 # Last time of the schema changed , if the client s version is different then # automatically destroy the old, create the new table then reload the data into it }, comment_vote : { cols : [ [ comment_hash , TEXT ], [ vote , INTEGER ], [ json_id , INTEGER REFERENCES json (json_id) ] ], indexes : [ CREATE UNIQUE INDEX comment_vote_key ON comment_vote(comment_hash, json_id) , CREATE INDEX comment_vote_hash ON comment_vote(comment_hash) ], schema_changed : 1426195826 }, user : { cols : [ [ user_id , INTEGER ], [ user_name , TEXT ], [ max_size , INTEGER ], [ path , TEXT ], [ added , INTEGER ], [ json_id , INTEGER REFERENCES json (json_id) ] ], indexes : [ CREATE UNIQUE INDEX user_id ON user(user_id) , CREATE UNIQUE INDEX user_path ON user(path) ], schema_changed : 1426195825 }, json : { # Json table format only required if you have specified to_json_table pattern anywhere cols : [ [ json_id , INTEGER PRIMARY KEY AUTOINCREMENT ], [ directory , TEXT ], [ file_name , TEXT ], [ cert_auth_type , TEXT ], [ cert_user_id , TEXT ] ], indexes : [ CREATE UNIQUE INDEX path ON json(directory, site, file_name) ], schema_changed : 4 } } } Example for data.json file { next_topic_id : 2 , topics : [ { topic_id : 1 , title : Newtopic , body : Topic! , added : 1426628540 , parent_topic_hash : 5@2 } ], next_message_id : 19 , comments : { 1@2 : [ { comment_id : 1 , body : New user test! , added : 1423442049 } ], 1@13 : [ { comment_id : 2 , body : hello , added : 1424653288 }, { comment_id : 13 , body : test 123 , added : 1426463715 } ] }, topic_votes : { 1@2 : 1 , 4@2 : 1 , 2@2 : 1 , 1@5 : 1 , 1@6 : 1 , 3@2 : 1 , 1@13 : 1 , 4@5 : 1 }, comment_votes : { 5@5 : 1 , 2@12 : 1 , 1@12 : 1 , 33@2 : 1 , 45@2 : 1 , 12@5 : 1 , 34@2 : 1 , 46@2 : 1 } } Example for content.json file { files : {}, ignore : .*/.* , includes : { 13v1FwKcq7dx2UPruFcRcqd8s7VBjvoWJW/content.json : { added : 1426683897 , files_allowed : data.json , includes_allowed : false , max_size : 10000 , signers : [ 13v1FwKcq7dx2UPruFcRcqd8s7VBjvoWJW ], signers_required : 1 , user_id : 15 , user_name : meginthelloka }, 15WGMVViswrF13sAKb7je6oX3UhXavBxxQ/content.json : { added : 1426687209 , files_allowed : data.json , includes_allowed : false , max_size : 10000 , signers : [ 15WGMVViswrF13sAKb7je6oX3UhXavBxxQ ], signers_required : 1 , user_id : 18 , user_name : habla } } }","title":"Structure of dbschema.json"},{"location":"en/site_development/dbschema_json/#structure-of-dbschemajson","text":"Example dbschema.json file The code below will do the following: If an updated data/users/*/data.json file is received (eg.: a user posted something): Every row in data[\"topics\"] is loaded to the topic table Every key in data[\"comment_votes\"] is loaded to the comment_vote table as comment_hash col and the values stored in same line as vote If an updated data/users/content.json file is received (eg.: new user created): The \"user_id\", \"user_name\", \"max_size\", \"added\" key in value of content[\"include\"] is loaded into the user table and the key is stored as path Note: Some restriction apply to regular expressions to avoid possible ReDoS vulnerability. { db_name : ZeroTalk , # Database name (only used for debugging) db_file : data/users/zerotalk.db , # Database file relative to site s directory version : 2 , # 1 = Json table has path column that includes directory and filename # 2 = Json table has separate directory and file_name column # 3 = Same as version 2, but also has site column (for merger sites) maps : { # Json to database mappings .*/data.json : { # Regex pattern of file relative to db_file to_table : [ # Load values to table { node : topics , # Reading data.json[topics] key value table : topic # Feeding data to topic table }, { node : comment_votes , # Reading data.json[comment_votes] key value table : comment_vote , # Feeding data to comment_vote table key_col : comment_hash , # data.json[comment_votes] is a simple dict, the keys of the # dict are loaded to comment_vote table comment_hash column val_col : vote # The data.json [ comment_votes ] dict values loaded to comment_vote table vote column } ], to_keyvalue : [ next_message_id , next_topic_id ] # Load data.json [ next_topic_id ] to keyvalue table # (key : next_message_id , value: data.json[next_message_id] value) }, content.json : { to_table : [ { node : includes , table : user , key_col : path , import_cols : [ user_id , user_name , max_size , added ], # Only import these columns to user table replaces : { path : { content.json : data.json } # Replace content.json to data.json in the # value of path column (required for joining) } } ], to_json_table : [ cert_auth_type , cert_user_id ] # Save cert_auth_type and cert_user_id directly to json table (easier and faster data queries) } }, tables : { # Table definitions topic : { # Define topic table cols : [ # Cols of the table [ topic_id , INTEGER ], [ title , TEXT ], [ body , TEXT ], [ type , TEXT ], [ parent_topic_hash , TEXT ], [ added , DATETIME ], [ json_id , INTEGER REFERENCES json (json_id) ] ], indexes : [ CREATE UNIQUE INDEX topic_key ON topic(topic_id, json_id) ], # Indexes automatically created schema_changed : 1426195822 # Last time of the schema changed , if the client s version is different then # automatically destroy the old, create the new table then reload the data into it }, comment_vote : { cols : [ [ comment_hash , TEXT ], [ vote , INTEGER ], [ json_id , INTEGER REFERENCES json (json_id) ] ], indexes : [ CREATE UNIQUE INDEX comment_vote_key ON comment_vote(comment_hash, json_id) , CREATE INDEX comment_vote_hash ON comment_vote(comment_hash) ], schema_changed : 1426195826 }, user : { cols : [ [ user_id , INTEGER ], [ user_name , TEXT ], [ max_size , INTEGER ], [ path , TEXT ], [ added , INTEGER ], [ json_id , INTEGER REFERENCES json (json_id) ] ], indexes : [ CREATE UNIQUE INDEX user_id ON user(user_id) , CREATE UNIQUE INDEX user_path ON user(path) ], schema_changed : 1426195825 }, json : { # Json table format only required if you have specified to_json_table pattern anywhere cols : [ [ json_id , INTEGER PRIMARY KEY AUTOINCREMENT ], [ directory , TEXT ], [ file_name , TEXT ], [ cert_auth_type , TEXT ], [ cert_user_id , TEXT ] ], indexes : [ CREATE UNIQUE INDEX path ON json(directory, site, file_name) ], schema_changed : 4 } } }","title":"Structure of dbschema.json"},{"location":"en/site_development/dbschema_json/#example-for-datajson-file","text":"{ next_topic_id : 2 , topics : [ { topic_id : 1 , title : Newtopic , body : Topic! , added : 1426628540 , parent_topic_hash : 5@2 } ], next_message_id : 19 , comments : { 1@2 : [ { comment_id : 1 , body : New user test! , added : 1423442049 } ], 1@13 : [ { comment_id : 2 , body : hello , added : 1424653288 }, { comment_id : 13 , body : test 123 , added : 1426463715 } ] }, topic_votes : { 1@2 : 1 , 4@2 : 1 , 2@2 : 1 , 1@5 : 1 , 1@6 : 1 , 3@2 : 1 , 1@13 : 1 , 4@5 : 1 }, comment_votes : { 5@5 : 1 , 2@12 : 1 , 1@12 : 1 , 33@2 : 1 , 45@2 : 1 , 12@5 : 1 , 34@2 : 1 , 46@2 : 1 } }","title":"Example for data.json file"},{"location":"en/site_development/dbschema_json/#example-for-contentjson-file","text":"{ files : {}, ignore : .*/.* , includes : { 13v1FwKcq7dx2UPruFcRcqd8s7VBjvoWJW/content.json : { added : 1426683897 , files_allowed : data.json , includes_allowed : false , max_size : 10000 , signers : [ 13v1FwKcq7dx2UPruFcRcqd8s7VBjvoWJW ], signers_required : 1 , user_id : 15 , user_name : meginthelloka }, 15WGMVViswrF13sAKb7je6oX3UhXavBxxQ/content.json : { added : 1426687209 , files_allowed : data.json , includes_allowed : false , max_size : 10000 , signers : [ 15WGMVViswrF13sAKb7je6oX3UhXavBxxQ ], signers_required : 1 , user_id : 18 , user_name : habla } } }","title":"Example for content.json file"},{"location":"en/site_development/getting_started/","text":"Getting Started ZeroNet allows you to publish static and dynamic websites on a distributed web platform. In ZeroNet there is no concept of servers. Thus, server-side languages like PHP or Ruby are not needed. Instead, one can create dynamic content using ZeroNet's API (called ZeroFrame), JavaScript (or CoffeeScript) and the SQL database provided to all websites. Tutorials ZeroChat tutorial In this tutorial we are going to build a P2P, decentralized, server-less chat site in less then 100 lines of code. Read on ZeroBlog Read on Medium.com Useful Information ZeroNet Debug mode ZeroNet comes with a --debug flag that will make site development easier. To run ZeroNet in debug mode use: python zeronet.py --debug If you are using compiled/bundled version of ZeroNet: On Windows: lib\\ZeroNet.cmd --debug On Linux: ./ZeroNet.sh --debug On Mac: ./ZeroNet.app/Contents/MacOS/ZeroNet --debug Debug mode features: Automatic CoffeeScript - JavaScript conversion (All examples used in this documentation and sample sites are written in CoffeeScript ) Debug messages will appear in the console Auto reload of some source files (UiRequest, UiWebsocket, FileRequest) on modification to prevent restarting (Requires PyFilesystem on GNU/Linux) http://127.0.0.1:43110/Debug Traceback and interactive Python console at the last error position (using the wonderful Werkzeug debugger - Requires Werkzeug ) http://127.0.0.1:43110/Console Spawns an interactive Python console (Requires Werkzeug ) Disable HTTP Browser Caching In addition to Debug Mode, disabling HTTP Caching in the browser is an essential part of ZeroNet site development. Modern web browsers attempt to cache web content whenever they can. As all ZeroNet sites run in an iframe, web browsers cannot detect when a ZeroNet site's content changes, and thus site changes are often not reflected if HTTP Caching is enabled. To disable, open your browser's devtools, navigate to the devtools settings and check the option along the lines of 'Disable HTTP Cache (when toolbox is open)'. As the setting suggests, make sure to keep devtools open when testing new changes to your site! Extra features (works only for sites that you own) Merged CSS files: All CSS files inside the site folder will be merged into one file called all.css . You can choose to include only this file to your site. If you want to keep the other CSS files to make the development easier, you can add them to the ignore key of your content.json . This way, they won't be published with your site. (eg: add to your content.json \"ignore\": \"(js|css)/(?!all.(js|css))\" this will ignore all CSS and JS files except all.js and all.css ) Merged JS files: All JS files inside the site folder will be merged into one file called all.js . If a CoffeeScript compiler is present (bundled for Windows) it will convert .coffee to .js . Order in which files are merged into all.css/all.js: Files inside subdirectories of the css/js folder comes first; Files in the css/js folder will be merged according to file name ordering (01_a.css, 02_a.css, etc) Need Help? ZeroNet has a growing community of developers who hang out in various spaces. If you would like to ask for help, advice or just want to hang out, feel free to connect in to the following services: Forums ZeroExchange , a p2p StackOverflow clone ZeroTalk , a p2p Reddit-like forum Chat #zeronet-dev:matrix.org on Matrix IRC at #zeronet on Freenode","title":"Getting Started"},{"location":"en/site_development/getting_started/#getting-started","text":"ZeroNet allows you to publish static and dynamic websites on a distributed web platform. In ZeroNet there is no concept of servers. Thus, server-side languages like PHP or Ruby are not needed. Instead, one can create dynamic content using ZeroNet's API (called ZeroFrame), JavaScript (or CoffeeScript) and the SQL database provided to all websites.","title":"Getting Started"},{"location":"en/site_development/getting_started/#tutorials","text":"","title":"Tutorials"},{"location":"en/site_development/getting_started/#zerochat-tutorial","text":"In this tutorial we are going to build a P2P, decentralized, server-less chat site in less then 100 lines of code. Read on ZeroBlog Read on Medium.com","title":"ZeroChat tutorial"},{"location":"en/site_development/getting_started/#useful-information","text":"","title":"Useful Information"},{"location":"en/site_development/getting_started/#zeronet-debug-mode","text":"ZeroNet comes with a --debug flag that will make site development easier. To run ZeroNet in debug mode use: python zeronet.py --debug If you are using compiled/bundled version of ZeroNet: On Windows: lib\\ZeroNet.cmd --debug On Linux: ./ZeroNet.sh --debug On Mac: ./ZeroNet.app/Contents/MacOS/ZeroNet --debug","title":"ZeroNet Debug mode"},{"location":"en/site_development/getting_started/#debug-mode-features","text":"Automatic CoffeeScript - JavaScript conversion (All examples used in this documentation and sample sites are written in CoffeeScript ) Debug messages will appear in the console Auto reload of some source files (UiRequest, UiWebsocket, FileRequest) on modification to prevent restarting (Requires PyFilesystem on GNU/Linux) http://127.0.0.1:43110/Debug Traceback and interactive Python console at the last error position (using the wonderful Werkzeug debugger - Requires Werkzeug ) http://127.0.0.1:43110/Console Spawns an interactive Python console (Requires Werkzeug )","title":"Debug mode features:"},{"location":"en/site_development/getting_started/#disable-http-browser-caching","text":"In addition to Debug Mode, disabling HTTP Caching in the browser is an essential part of ZeroNet site development. Modern web browsers attempt to cache web content whenever they can. As all ZeroNet sites run in an iframe, web browsers cannot detect when a ZeroNet site's content changes, and thus site changes are often not reflected if HTTP Caching is enabled. To disable, open your browser's devtools, navigate to the devtools settings and check the option along the lines of 'Disable HTTP Cache (when toolbox is open)'. As the setting suggests, make sure to keep devtools open when testing new changes to your site!","title":"Disable HTTP Browser Caching"},{"location":"en/site_development/getting_started/#extra-features-works-only-for-sites-that-you-own","text":"Merged CSS files: All CSS files inside the site folder will be merged into one file called all.css . You can choose to include only this file to your site. If you want to keep the other CSS files to make the development easier, you can add them to the ignore key of your content.json . This way, they won't be published with your site. (eg: add to your content.json \"ignore\": \"(js|css)/(?!all.(js|css))\" this will ignore all CSS and JS files except all.js and all.css ) Merged JS files: All JS files inside the site folder will be merged into one file called all.js . If a CoffeeScript compiler is present (bundled for Windows) it will convert .coffee to .js . Order in which files are merged into all.css/all.js: Files inside subdirectories of the css/js folder comes first; Files in the css/js folder will be merged according to file name ordering (01_a.css, 02_a.css, etc)","title":"Extra features (works only for sites that you own)"},{"location":"en/site_development/getting_started/#need-help","text":"ZeroNet has a growing community of developers who hang out in various spaces. If you would like to ask for help, advice or just want to hang out, feel free to connect in to the following services:","title":"Need Help?"},{"location":"en/site_development/getting_started/#forums","text":"ZeroExchange , a p2p StackOverflow clone ZeroTalk , a p2p Reddit-like forum","title":"Forums"},{"location":"en/site_development/getting_started/#chat","text":"#zeronet-dev:matrix.org on Matrix IRC at #zeronet on Freenode","title":"Chat"},{"location":"en/site_development/zeroframe_api_reference/","text":"ZeroFrame API Reference The ZeroFrame API ZeroFrame is an API that allows ZeroNet websites to interact with the ZeroNet daemon. It allows sites to save/retrieve files, publish changes and many other things. A copy of the library is included at js/ZeroFrame.js whenever a new site is created. The library can be imported like any other JavaScript file, or site developers also have the option of importing through NPM . Please see the ZeroFrame API Reference for API details. Wrapper These commands are handled by the wrapper frame and are thus not sent to the UiServer using websocket. wrapperConfirm Display a notification with confirm button Parameter Description message The message you want to display button_caption (optional) Caption of the confirmation button (default: OK) Return : True if clicked on button Example: # Delete site siteDelete: (address) - site = @sites [ address ] title = site . content . title if title . length 40 title = title . substring ( 0 , 15 ) + ... + title . substring ( title . length - 10 ) @cmd wrapperConfirm , [ Are you sure you sure? b #{ title } /b , Delete ], (confirmed) = @log Deleting #{ site . address } ... , confirmed if confirmed $ ( .site- #{ site . address } ). addClass ( deleted ) @cmd siteDelete , { address : address } wrapperInnerLoaded Applies the windows.location.hash to page url. Call when you page is fully loaded to jump to the desired anchor point. wrapperGetLocalStorage Return : Browser's local store for the site Example: @cmd wrapperGetLocalStorage , [], (res) = res ?= {} @log Local storage value: , res wrapperGetState Return : Browser's current history state object wrapperGetAjaxKey Return : The key you need to initilize ajax requests Example: ajax_key = await page . cmdp ( wrapperGetAjaxKey ) req = new window . XMLHttpRequest () req . open ( GET , content.json?ajax_key= + ajax_key ) req . setRequestHeader ( Range , bytes=10-200 ) // Optional: only if you want request partial file req . send () console . log ( req . response ) wrapperNotification Display a notification Parameter Description type Possible values: info, error, done message The message you want to display timeout (optional) Hide display after this interval (milliseconds) Return : None Example: @cmd wrapperNotification , [ done , Your registration has been sent! , 10000 ] wrapperOpenWindow Navigates or opens a new popup window. Parameter Description url Url of the opened page target (optional) Target window name specs (optional) Special properties of the window (see: window.open specs ) Example: @cmd wrapperOpenWindow , [ https://zeronet.io , _blank , width=550,height=600,location=no,menubar=no ] wrapperPermissionAdd Request new permission for site Parameter Description permission Name of permission (eg. Merger:ZeroMe) wrapperPrompt Prompt text input from user Parameter Description message The message you want to display type (optional) Type of the input (default: text) Return : Text entered to input Example: # Prompt the private key @cmd wrapperPrompt , [ Enter your private key: , password ], (privatekey) = $ ( .publishbar .button ). addClass ( loading ) # Send sign content.json and publish request to server @cmd sitePublish , [ privatekey ], (res) = $ ( .publishbar .button ). removeClass ( loading ) @log Publish result: , res wrapperPushState Change the url and adds new entry to browser's history. See: pushState JS method Parameter Description state State javascript object title Title of the page url Url of the page Return : None Example: @cmd wrapperPushState , [{ scrollY : 100 }, Profile page , Profile ] wrapperReplaceState Change the url without adding new entry to browser's history. See: replaceState JS method Parameter Description state State javascript object title Title of the page url Url of the page Return : None @cmd wrapperReplaceState , [{ scrollY : 100 }, Profile page , Profile ] wrapperRequestFullscreen Set the current page to fullscreen. (request permission for the site on first call) Note: Starting from ZeroNet Rev3136 you can use the fullscreen javascript API directly, without fullscreen request Example: page . cmd ( wrapperRequestFullscreen ) wrapperSetLocalStorage Set browser's local store data stored for the site Parameter Description data Any data structure you want to store for the site Return : None Example: Page . local_storage [ topic. #{ @topic_id } _ #{ @topic_user_id } .visited ] = Time . timestamp () Page . cmd wrapperSetLocalStorage , Page . local_storage wrapperSetTitle Set browser's title Parameter Description title New browser tab title Return : None Example: Page . cmd wrapperSetTitle , newtitle wrapperSetViewport Set sites's viewport meta tag content (required for mobile sites) Parameter Description viewport The viewport meta tag content Return : None Example: # Prompt the private key @cmd wrapperSetViewport , width=device-width, initial-scale=1.0 UiServer The UiServer is for ZeroNet what the LAMP setup is for normal websites. The UiServer will do all the 'backend' work (eg: querying the DB, accessing files, etc). This are the API calls you will need to make your site dynamic. announcerInfo Tracker statistics for current site Return : { stats : { zero://45.77.23.92:15555 : { status : announced , num_success : 1 , time_last_error : 0 , time_status : 1541776998.782 , num_request : 1 , time_request : 1541776996.884 , num_error : 0 }, ... } } certAdd Add a new certificate to current user. Parameter Description domain Certificate issuer domain auth_type Auth type used on registration auth_user_name User name used on registration cert The cert itself: auth_address#auth_type/auth_user_name string signed by the cert site owner Return : \"ok\", \"Not changed\" or {\"error\": error_message} Example: @cmd certAdd , [ zeroid.bit , auth_type , user_name , cert_sign ], (res) = $ ( .ui ). removeClass ( flipped ) if res . error @cmd wrapperNotification , [ error , #{ res . error } ] certSelect Display certificate selector. Parameter Description accepted_domains List of domains that accepted by site as authorization provider accept_any Does not limits the accepted certificate providers accepted_pattern Regexp pattern for accepted certificate providers address Return : None Example: @cmd certSelect , { accepted_domains : [ zeroid.bit ], accepted_pattern : 1ZeroiD[0-9] } channelJoin Request notifications about sites's events. Parameter Description channel Channel to join Return : None Channels : siteChanged (joined by default) Events: peers_added, file_started, file_done, file_failed Example : # Wrapper websocket connection ready onOpenWebsocket: (e) = @cmd channelJoinAllsite , { channel : siteChanged } # Route incoming requests and messages route: (cmd, data) - if cmd == setSiteInfo @log Site changed , data else @log Unknown command , cmd , data Example event data { tasks : 0 , size_limit : 10 , address : 1RivERqttrjFqwp9YH1FviduBosQPtdBN , next_size_limit : 10 , event :[ file_done , index.html ], [...] # Same as siteInfo return dict } dbQuery Run a query on the sql cache Parameter Description query Sql query command params Parameter substitution to the sql query Return : Result of the query Example: Page . cmd ( dbQuery , [ SELECT * FROM json WHERE file_name = :file_name , { file_name : data.json } ], ( res ) = { console . log ( res . length ) }) Page . cmd ( dbQuery , [ SELECT * FROM json WHERE file_name IN :file_names , { file_names : [ data.json , content.json ]} ], ( res ) = { console . log ( res . length ) }) Page . cmd ( dbQuery , [ SELECT * FROM json ? , { file_name : [ data.json , content.json ]} ], ( res ) = { console . log ( res . length ) }) @log Updating user info... , @my_address Page . cmd dbQuery , [ SELECT user.*, json.json_id AS data_json_id FROM user LEFT JOIN json USING(path) WHERE path= #{ @my_address } /data.json ], (res) = if res . error or res . length == 0 # Db not ready yet or No user found $ ( .head-user.visitor ). css ( display , ) $ ( .user_name-my ). text ( Visitor ) if cb then cb () return @my_row = res [ 0 ] @my_id = @my_row [ user_id ] @my_name = @my_row [ user_name ] @my_max_size = @my_row [ max_size ] dirList List a content of a directory Parameter Description inner_path Directory you want to list Return : List of file and directory names fileDelete Delete a file Parameter Description inner_path The file you want to delete Return : \"ok\" on success else the error message fileGet Get file content Parameter Description inner_path The file you want to get required (optional) Try and wait for the file if it's not exists. (default: True) format (optional) Encoding of returned data. (text or base64) (default: text) timeout (optional) Maximum wait time to data arrive (default: 300) Return : The content of the file Example: # Upvote a topic on ZeroTalk submitTopicVote: (e) = if not Users . my_name # Not registered Page . cmd wrapperNotification , [ info , Please, request access before posting. ] return false elem = $ ( e . currentTarget ) elem . toggleClass ( active ). addClass ( loading ) inner_path = data/users/ #{ Users . my_address } /data.json Page . cmd fileGet , [ inner_path ], (data) = data = JSON . parse ( data ) data . topic_votes ?= {} # Create if not exits topic_address = elem . parents ( .topic ). data ( topic_address ) if elem . hasClass ( active ) # Add upvote to topic data . topic_votes [ topic_address ] = 1 else # Remove upvote from topic delete data . topic_votes [ topic_address ] # Write file and publish to other peers Page . writePublish inner_path , Page . jsonEncode ( data ), (res) = elem . removeClass ( loading ) if res == true @log File written else # Failed elem . toggleClass ( active ) # Change back return false fileList Recursively list of files in a directory Parameter Description inner_path Directory you want to list Return : List of files in the directory (recursive) fileNeed Initialize download of a (optional) file. Parameter Description inner_path The file you want to get timeout (optional) Maximum wait time to data arrive (default: 300) Return : \"ok\" on successfull download fileQuery Simple json file query command Parameter Description dir_inner_path Pattern of queried files query Query command (optional) Return : Matched content Query examples: [\"data/users/*/data.json\", \"topics\"] : Returns all topics node from all user files [\"data/users/*/data.json\", \"comments.1@2\"] : Returns user_data[\"comments\"][\"1@2\"] value from all user files [\"data/users/*/data.json\", \"\"] : Returns all data from users files [\"data/users/*/data.json\"] : Returns all data from users files (same as above) Example: @cmd fileQuery , [ data/users/*/data.json , topics ], (topics) = topics . sort (a, b) - # Sort by date return a . added - b . added for topic in topics @log topic . topic_id , topic . inner_path , topic . title fileRules Return the rules for the file. Parameter Description inner_path File inner path Return : Matched content Example result: { current_size : 2485 , cert_signers : { zeroid.bit : [ 1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz ]}, files_allowed : data.json , signers : [ 1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj ], user_address : 1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj , max_size : 100000 } Example: @cmd fileRules , data/users/1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj/content.json , (rules) = @log rules fileWrite Write file content Parameter Description inner_path Inner path of the file you want to write content_base64 Content you want to write to file (base64 encoded) Return : \"ok\" on success else the error message Example: writeData: (cb=null) - # Encode to json, encode utf8 json_raw = unescape ( encodeURIComponent ( JSON . stringify ({ hello : ZeroNet }, undefined , \\t ))) # Convert to to base64 and send @cmd fileWrite , [ data.json , btoa ( json_raw )], (res) = if res == ok if cb then cb ( true ) else @cmd wrapperNotification , [ error , File write error: #{ res } ] if cb then cb ( false ) Note: to write files that not in content.json yet, you must have \"own\": true in data/sites.json at the site you want to write ping Test UiServer websocket connection Return: pong serverInfo Return: All information about the server Example: @cmd serverInfo , {}, (server_info) = @log Server info: , server_info Example return value: { debug : true , # Running in debug mode fileserver_ip : * , # Fileserver binded to fileserver_port : 15441 , # FileServer port ip_external : true , # Active of passive mode platform : win32 , # Operating system ui_ip : 127.0.0.1 , # UiServer binded to ui_port : 43110 , # UiServer port (Web) version : 0.2.5 # Version } siteInfo Return : All information about the site Example: @cmd siteInfo , {}, (site_info) = @log Site info: , site_info Example return value: { tasks : 0 , # Number of files currently under download size_limit : 10 , # Current site size limit in MB address : 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr , # Site address next_size_limit : 10 , # Size limit required by sum of site s files auth_address : 2D6xXUmCVAXGrbVUGRRJdS4j1hif1EMfae , # Current user s bitcoin address auth_key_sha512 : 269a0f4c1e0c697b9d56ccffd9a9748098e51acc5d2807adc15a587779be13cf , # Deprecated, dont use peers : 14 , # Peers of site auth_key : pOBdl00EJ29Ad8OmVIc763k4 , # Deprecated, dont use settings : { peers : 13 , # Saved peers num for sorting serving : true , # Site enabled modified : 1425344149.365 , # Last modification time of all site s files own : true , # Own site permissions : [ ADMIN ], # Site s permission size : 342165 # Site total size in bytes }, bad_files : 0 , # Files that needs to be download workers : 0 , # Current concurent downloads content : { # Root content.json files : 12 , # Number of file, detailed file info removed to reduce data transfer and parse time description : This site , title : ZeroHello , signs_required : 1 , modified : 1425344149.365 , ignore : (js|css)/(?!all.(js|css)) , signers_sign : null , address : 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr , zeronet_version : 0.2.5 , includes : 0 }, cert_user_id : zeronetuser@zeroid.bit , # Currently selected certificate for the site started_task_num : 1 , # Last number of files downloaded content_updated : 1426008289.71 # Content.json update time } sitePublish Publish a content.json of the site Parameter Description privatekey (optional) Private key used for signing (default: current user's privatekey) inner_path (optional) Inner path of the content json you want to publish (default: content.json) sign (optional) If True then sign the content.json before publish (default: True) Return : \"ok\" on success else the error message Example: # Prompt the private key @cmd wrapperPrompt , [ Enter your private key: , password ], (privatekey) = $ ( .publishbar .button ). addClass ( loading ) # Send sign content.json and publish request to server @cmd sitePublish , [ privatekey ], (res) = $ ( .publishbar .button ). removeClass ( loading ) @log Publish result: , res siteReload Reload content.json file content and scans for optional files Return : \"ok\" on success siteSign Sign a content.json of the site Parameter Description privatekey (optional) Private key used for signing (default: current user's privatekey) inner_path (optional) Inner path of the content json you want to sign (default: content.json) remove_missing_optional (optional) Remove the optional files from content.json that no longer present in the directory (default: False) Return : \"ok\" on success else the error message Note: Use \"stored\" as privatekey if its definied in users.json (eg. cloned sites) Example: if @site_info [ privatekey ] # Private key stored in users.json @cmd siteSign , [ stored , content.json ], (res) = @log Sign result , res siteUpdate Force check and download changed content from other peers (only necessary if user is in passive mode and using old version of Zeronet) Parameter Description address Address of site want to update (only current site allowed without site ADMIN permission) Return: None Example: # Manual site update for passive connections updateSite: = $ ( #passive_error a ). addClass ( loading ). removeClassLater ( loading , 1000 ) @log Updating site... @cmd siteUpdate , { address : @site_info . address } userGetSettings Get user's saved settings. Return: The user specific site's settings saved using userSetSettings. userSetSettings Set user's site specific settings. Parameter Description settings The user's site specific settings you want to store. Return: ok on success Plugin: Bigfile BigfileUploadInit Initialize a new upload endpoint for a bigfile. Parameter Description inner_path Upload location size File size Return : A dict with the information about the upload: Parameter Description url Http upload endpoint piece_size Size of each separately hashed part of the file inner_path File path within the site file_relative_path File path relative to content.json Note: Not supported non-ascii characters will be automatically removed from inner_path and file_relative_path values Example var input = document . createElement ( input ) document . body . appendChild ( input ) input . type = file input . style . visibility = hidden input . onchange = () = { var file = input . files [ 0 ] page . cmd ( bigfileUploadInit , [ optional/ + file . name , file . size ], ( init_res ) = { var formdata = new FormData () formdata . append ( file . name , file ) var req = new XMLHttpRequest () req . upload . addEventListener ( progress , console . log ) req . upload . addEventListener ( loadend , () = page . cmd ( wrapperConfirm , [ Upload finished! , Open file ], () = { window . top . location = init_res . inner_path } ) ) req . withCredentials = true req . open ( POST , init_res . url ) req . send ( formdata ) }) } input . click () Plugin: Chart chartDbQuery Run database query on chart database. Arguments and return value: Same as dbQuery chartGetPeerLocations Get list of unique peers in client Return : List of unique peers Example : Page . cmd ( chartGetPeerLocations ) [ { lat : 43.6655 , city : Toronto , ping : null , lon : - 79.4204 , country : Canada }, ... ] Plugin: Cors Allow cross-site file access under virtual directory /cors-siteaddress/ and grant cross-site database query using the as API command. corsPermission Request Cross origin resource sharing permission with the given site. Parameter Description address The site address you want get cors access Return : ok on success After the permission is granted the other site's files will be available under /cors-siteaddress/ virtual directory via http request or by the fileGet API command. The site will be added to user's client if it's required. Plugin: CryptMessage userPublickey Get user's site specific publickey Parameter Description index (optional) Sub-publickey within site (default: 0) Return : base64 encoded publickey eciesEncrypt Encrypt a text using a publickey Parameter Description text Text to encrypt publickey (optional) User's publickey index (int) or base64 encoded publickey (default: 0) return_aes_key (optional) Get the AES key used in encryption (default: False) Return : Encrypted text in base64 format or [Encrypted text in base64 format, AES key in base64 format] eciesDecrypt Try to decrypt list of texts Parameter Description params A text or list of encrypted texts privatekey (optional) User's privatekey index (int) or base64 encoded privatekey (default: 0) Return : Decrypted text or list of decrypted texts (null for failed decodings) aesEncrypt Encrypt a text using the key and the iv Parameter Description text A text encrypt using AES key (optional) Base64 encoded password (default: generate new) iv (optional) Base64 encoded iv (default: generate new) Return : [base64 encoded key, base64 encoded iv, base64 encoded encrypted text] aesDecrypt Decrypt text using the IV and AES key Parameter Description iv IV in Base64 format encrypted_text Encrypted text in Base64 format encrypted_texts List of [base64 encoded iv, base64 encoded encrypted text] pairs key Base64 encoded password for the text keys Keys for decoding (tries every one for every pairs) Return : Decoded text or list of decoded texts Plugin: Newsfeed feedFollow Set followed sql queries. The SQL query should result in rows with cols: Field Description type Type: post, article, comment, mention date_added Event time title Event's first line to be displayed body Event's second and third line url Link to event's page Parameter Description feeds Format: {\"query name\": [SQL query, [param1, param2, ...], ...}, parameters will be escaped, joined by , inserted in place of :params in the Sql query. Return : ok Example: # Follow ZeroBlog posts query = SELECT post_id AS event_uri, post AS type, date_published AS date_added, title AS title, body AS body, ?Post: || post_id AS url FROM post params = [ ] Page . cmd feedFollow [{ Posts : [ query , params ]}] feedListFollow Return of current followed feeds Return : The currently followed feeds in the same format as in the feedFollow commands feedQuery Execute all followed sql query Return : The result of the followed Sql queries Parameter Description limit Limit of results per followed site (default: 10) day_limit Return no older than number of this days (default: 3) Plugin: MergerSite mergerSiteAdd Start downloading new merger site(s) Parameter Description addresses Site address or list of site addresses mergerSiteDelete Stop seeding and delete a merged site Parameter Description address Site address mergerSiteList Return merged sites. Parameter Description query_site_info If True, then gives back detailed site info for merged sites Plugin: Mute muteAdd Add new user to mute list. (Requires confirmation for non-ADMIN sites) Parameter Description auth_address Directory name of the user's data. cert_user_id Cert user name of the user reason Reason of the muting Return : ok if confirmed Example: Page . cmd ( muteAdd , [ 1GJUaZMjTfeETdYUhchSkDijv6LVhjekHz , helloworld@kaffie.bit , Spammer ]) muteRemove Remove a user from mute list. (Requires confirmation for non-ADMIN sites) Parameter Description auth_address Directory name of the user's data. Return : ok if confirmed Example: Page . cmd ( muteRemove , 1GJUaZMjTfeETdYUhchSkDijv6LVhjekHz ) muteList List muted users. (Requires ADMIN permission on site) Return : List of muted users Plugin: OptionalManager optionalFileList Return list of optional files Parameter Description address The site address you want to list optional files (default: current site) orderby Order of returned optional files (default: time_downloaded DESC) limit Max number of returned optional files (default: 10) Return : Database row of optional files: file_id, site_id, inner_path, hash_id, size, peer, uploaded, is_downloaded, is_pinned, time_added, time_downlaoded, time_accessed optionalFileInfo Query optional file info from database Parameter Description inner_path The path of the file Return : Database row of optional file: file_id, site_id, inner_path, hash_id, size, peer, uploaded, is_downloaded, is_pinned, time_added, time_downlaoded, time_accessed optionalFilePin Pin (exclude from automatized optional file cleanup) downloaded optional file Parameter Description inner_path The path of the file address Address for the file (default: current site) optionalFileUnpin Remove pinning (include from automatized optional file cleanup) of downloaded optional file Parameter Description inner_path The path of the file address Address for the file (default: current site) optionalFileDelete Query a downloaded optional file Parameter Description inner_path The path of the file address Address for the file (default: current site) optionalLimitStats Return currently used disk space by optional files Return : limit, used and free space statistics optionalLimitSet Set the optional file limit Parameter Description limit Max space used by the optional files in gb or percent of used space optionalHelpList List the auto-downloaded directories of optional files Parameter Description address Address of site you want to list helped directories (default: current site) Return : Dict of auto-downloaded directories and descriptions optionalHelp Add directory to auto-download list Parameter Description directory Directory you want to add to auto-download list title Title for the entry (displayed on ZeroHello) address Address of site you want to add the auto-download directory (default: current site) optionalHelpRemove Remove an auto-download entry Parameter Description directory Directory you want to remove from auto-download list address Address of affected site (default: current site) optionalHelpAll Help download every new uploaded optional file to the site Parameter Description value Enable or Disable the auto-download address Address of affected site (default: current site) Admin commands (requires ADMIN permission in data/sites.json) as Execute command in other site's context Parameter Description address The context site's address cmd API command name arguments API command arguments Return : Command's return value Example Page . cmd ( as , [ 138R53t3ZW7KDfSfxVpWUsMXgwUnsDNXLP , siteSetLimit , 20 ], console . log ) address = 138R53t3ZW7KDfSfxVpWUsMXgwUnsDNXLP query = SELECT * FROM json WHERE file_name = :file_name params = { file_name : data.json } Page . cmd ( as , [ address , dbQuery , [ query , params ]], function ( res ) { console . log ( res . length ) } ) Return : ok configSet Create or update an entry in ZeroNet config file. (zeronet.conf by default) Parameter Description key Configuration entry name value Configuration entry new value Return : ok certSet Set the used certificate for current site. Parameter Description domain Domain of the certificate issuer Return : None channelJoinAllsite Request notifications about every site's events. Parameter Description channel Channel to join (see channelJoin) Return : None serverPortcheck Start checking if port is opened Return : True (port opened) or False (port closed) serverShutdown Stop running ZeroNet client. Return : None serverUpdate Re-download ZeroNet from github. Return : None siteClone Copy site files into a new one. Every file and directory will be skipped if it has a -default subfixed version and the subfixed version will be copied instead of it. Eg. If you have a data and a data-default directory: The data directory will not be copied and the data-default directory will be renamed to data. Parameter Description address Address of site want to clone root_inner_path The source directory of the new site Return : None, automatically redirects to new site on completion siteList Return : SiteInfo list of all downloaded sites sitePause Pause site serving Parameter Description address Address of site want to pause Return : None siteResume Resume site serving Parameter Description address Address of site want to resume Return : None","title":"ZeroFrame API Reference"},{"location":"en/site_development/zeroframe_api_reference/#zeroframe-api-reference","text":"","title":"ZeroFrame API Reference"},{"location":"en/site_development/zeroframe_api_reference/#the-zeroframe-api","text":"ZeroFrame is an API that allows ZeroNet websites to interact with the ZeroNet daemon. It allows sites to save/retrieve files, publish changes and many other things. A copy of the library is included at js/ZeroFrame.js whenever a new site is created. The library can be imported like any other JavaScript file, or site developers also have the option of importing through NPM . Please see the ZeroFrame API Reference for API details.","title":"The ZeroFrame API"},{"location":"en/site_development/zeroframe_api_reference/#wrapper","text":"These commands are handled by the wrapper frame and are thus not sent to the UiServer using websocket.","title":"Wrapper"},{"location":"en/site_development/zeroframe_api_reference/#wrapperconfirm","text":"Display a notification with confirm button Parameter Description message The message you want to display button_caption (optional) Caption of the confirmation button (default: OK) Return : True if clicked on button Example: # Delete site siteDelete: (address) - site = @sites [ address ] title = site . content . title if title . length 40 title = title . substring ( 0 , 15 ) + ... + title . substring ( title . length - 10 ) @cmd wrapperConfirm , [ Are you sure you sure? b #{ title } /b , Delete ], (confirmed) = @log Deleting #{ site . address } ... , confirmed if confirmed $ ( .site- #{ site . address } ). addClass ( deleted ) @cmd siteDelete , { address : address }","title":"wrapperConfirm"},{"location":"en/site_development/zeroframe_api_reference/#wrapperinnerloaded","text":"Applies the windows.location.hash to page url. Call when you page is fully loaded to jump to the desired anchor point.","title":"wrapperInnerLoaded"},{"location":"en/site_development/zeroframe_api_reference/#wrappergetlocalstorage","text":"Return : Browser's local store for the site Example: @cmd wrapperGetLocalStorage , [], (res) = res ?= {} @log Local storage value: , res","title":"wrapperGetLocalStorage"},{"location":"en/site_development/zeroframe_api_reference/#wrappergetstate","text":"Return : Browser's current history state object","title":"wrapperGetState"},{"location":"en/site_development/zeroframe_api_reference/#wrappergetajaxkey","text":"Return : The key you need to initilize ajax requests Example: ajax_key = await page . cmdp ( wrapperGetAjaxKey ) req = new window . XMLHttpRequest () req . open ( GET , content.json?ajax_key= + ajax_key ) req . setRequestHeader ( Range , bytes=10-200 ) // Optional: only if you want request partial file req . send () console . log ( req . response )","title":"wrapperGetAjaxKey"},{"location":"en/site_development/zeroframe_api_reference/#wrappernotification","text":"Display a notification Parameter Description type Possible values: info, error, done message The message you want to display timeout (optional) Hide display after this interval (milliseconds) Return : None Example: @cmd wrapperNotification , [ done , Your registration has been sent! , 10000 ]","title":"wrapperNotification"},{"location":"en/site_development/zeroframe_api_reference/#wrapperopenwindow","text":"Navigates or opens a new popup window. Parameter Description url Url of the opened page target (optional) Target window name specs (optional) Special properties of the window (see: window.open specs ) Example: @cmd wrapperOpenWindow , [ https://zeronet.io , _blank , width=550,height=600,location=no,menubar=no ]","title":"wrapperOpenWindow"},{"location":"en/site_development/zeroframe_api_reference/#wrapperpermissionadd","text":"Request new permission for site Parameter Description permission Name of permission (eg. Merger:ZeroMe)","title":"wrapperPermissionAdd"},{"location":"en/site_development/zeroframe_api_reference/#wrapperprompt","text":"Prompt text input from user Parameter Description message The message you want to display type (optional) Type of the input (default: text) Return : Text entered to input Example: # Prompt the private key @cmd wrapperPrompt , [ Enter your private key: , password ], (privatekey) = $ ( .publishbar .button ). addClass ( loading ) # Send sign content.json and publish request to server @cmd sitePublish , [ privatekey ], (res) = $ ( .publishbar .button ). removeClass ( loading ) @log Publish result: , res","title":"wrapperPrompt"},{"location":"en/site_development/zeroframe_api_reference/#wrapperpushstate","text":"Change the url and adds new entry to browser's history. See: pushState JS method Parameter Description state State javascript object title Title of the page url Url of the page Return : None Example: @cmd wrapperPushState , [{ scrollY : 100 }, Profile page , Profile ]","title":"wrapperPushState"},{"location":"en/site_development/zeroframe_api_reference/#wrapperreplacestate","text":"Change the url without adding new entry to browser's history. See: replaceState JS method Parameter Description state State javascript object title Title of the page url Url of the page Return : None @cmd wrapperReplaceState , [{ scrollY : 100 }, Profile page , Profile ]","title":"wrapperReplaceState"},{"location":"en/site_development/zeroframe_api_reference/#wrapperrequestfullscreen","text":"Set the current page to fullscreen. (request permission for the site on first call) Note: Starting from ZeroNet Rev3136 you can use the fullscreen javascript API directly, without fullscreen request Example: page . cmd ( wrapperRequestFullscreen )","title":"wrapperRequestFullscreen"},{"location":"en/site_development/zeroframe_api_reference/#wrappersetlocalstorage","text":"Set browser's local store data stored for the site Parameter Description data Any data structure you want to store for the site Return : None Example: Page . local_storage [ topic. #{ @topic_id } _ #{ @topic_user_id } .visited ] = Time . timestamp () Page . cmd wrapperSetLocalStorage , Page . local_storage","title":"wrapperSetLocalStorage"},{"location":"en/site_development/zeroframe_api_reference/#wrappersettitle","text":"Set browser's title Parameter Description title New browser tab title Return : None Example: Page . cmd wrapperSetTitle , newtitle","title":"wrapperSetTitle"},{"location":"en/site_development/zeroframe_api_reference/#wrappersetviewport","text":"Set sites's viewport meta tag content (required for mobile sites) Parameter Description viewport The viewport meta tag content Return : None Example: # Prompt the private key @cmd wrapperSetViewport , width=device-width, initial-scale=1.0","title":"wrapperSetViewport"},{"location":"en/site_development/zeroframe_api_reference/#uiserver","text":"The UiServer is for ZeroNet what the LAMP setup is for normal websites. The UiServer will do all the 'backend' work (eg: querying the DB, accessing files, etc). This are the API calls you will need to make your site dynamic.","title":"UiServer"},{"location":"en/site_development/zeroframe_api_reference/#announcerinfo","text":"Tracker statistics for current site Return : { stats : { zero://45.77.23.92:15555 : { status : announced , num_success : 1 , time_last_error : 0 , time_status : 1541776998.782 , num_request : 1 , time_request : 1541776996.884 , num_error : 0 }, ... } }","title":"announcerInfo"},{"location":"en/site_development/zeroframe_api_reference/#certadd","text":"Add a new certificate to current user. Parameter Description domain Certificate issuer domain auth_type Auth type used on registration auth_user_name User name used on registration cert The cert itself: auth_address#auth_type/auth_user_name string signed by the cert site owner Return : \"ok\", \"Not changed\" or {\"error\": error_message} Example: @cmd certAdd , [ zeroid.bit , auth_type , user_name , cert_sign ], (res) = $ ( .ui ). removeClass ( flipped ) if res . error @cmd wrapperNotification , [ error , #{ res . error } ]","title":"certAdd"},{"location":"en/site_development/zeroframe_api_reference/#certselect","text":"Display certificate selector. Parameter Description accepted_domains List of domains that accepted by site as authorization provider accept_any Does not limits the accepted certificate providers accepted_pattern Regexp pattern for accepted certificate providers address Return : None Example: @cmd certSelect , { accepted_domains : [ zeroid.bit ], accepted_pattern : 1ZeroiD[0-9] }","title":"certSelect"},{"location":"en/site_development/zeroframe_api_reference/#channeljoin","text":"Request notifications about sites's events. Parameter Description channel Channel to join Return : None Channels : siteChanged (joined by default) Events: peers_added, file_started, file_done, file_failed Example : # Wrapper websocket connection ready onOpenWebsocket: (e) = @cmd channelJoinAllsite , { channel : siteChanged } # Route incoming requests and messages route: (cmd, data) - if cmd == setSiteInfo @log Site changed , data else @log Unknown command , cmd , data Example event data { tasks : 0 , size_limit : 10 , address : 1RivERqttrjFqwp9YH1FviduBosQPtdBN , next_size_limit : 10 , event :[ file_done , index.html ], [...] # Same as siteInfo return dict }","title":"channelJoin"},{"location":"en/site_development/zeroframe_api_reference/#dbquery","text":"Run a query on the sql cache Parameter Description query Sql query command params Parameter substitution to the sql query Return : Result of the query Example: Page . cmd ( dbQuery , [ SELECT * FROM json WHERE file_name = :file_name , { file_name : data.json } ], ( res ) = { console . log ( res . length ) }) Page . cmd ( dbQuery , [ SELECT * FROM json WHERE file_name IN :file_names , { file_names : [ data.json , content.json ]} ], ( res ) = { console . log ( res . length ) }) Page . cmd ( dbQuery , [ SELECT * FROM json ? , { file_name : [ data.json , content.json ]} ], ( res ) = { console . log ( res . length ) }) @log Updating user info... , @my_address Page . cmd dbQuery , [ SELECT user.*, json.json_id AS data_json_id FROM user LEFT JOIN json USING(path) WHERE path= #{ @my_address } /data.json ], (res) = if res . error or res . length == 0 # Db not ready yet or No user found $ ( .head-user.visitor ). css ( display , ) $ ( .user_name-my ). text ( Visitor ) if cb then cb () return @my_row = res [ 0 ] @my_id = @my_row [ user_id ] @my_name = @my_row [ user_name ] @my_max_size = @my_row [ max_size ]","title":"dbQuery"},{"location":"en/site_development/zeroframe_api_reference/#dirlist","text":"List a content of a directory Parameter Description inner_path Directory you want to list Return : List of file and directory names","title":"dirList"},{"location":"en/site_development/zeroframe_api_reference/#filedelete","text":"Delete a file Parameter Description inner_path The file you want to delete Return : \"ok\" on success else the error message","title":"fileDelete"},{"location":"en/site_development/zeroframe_api_reference/#fileget","text":"Get file content Parameter Description inner_path The file you want to get required (optional) Try and wait for the file if it's not exists. (default: True) format (optional) Encoding of returned data. (text or base64) (default: text) timeout (optional) Maximum wait time to data arrive (default: 300) Return : The content of the file Example: # Upvote a topic on ZeroTalk submitTopicVote: (e) = if not Users . my_name # Not registered Page . cmd wrapperNotification , [ info , Please, request access before posting. ] return false elem = $ ( e . currentTarget ) elem . toggleClass ( active ). addClass ( loading ) inner_path = data/users/ #{ Users . my_address } /data.json Page . cmd fileGet , [ inner_path ], (data) = data = JSON . parse ( data ) data . topic_votes ?= {} # Create if not exits topic_address = elem . parents ( .topic ). data ( topic_address ) if elem . hasClass ( active ) # Add upvote to topic data . topic_votes [ topic_address ] = 1 else # Remove upvote from topic delete data . topic_votes [ topic_address ] # Write file and publish to other peers Page . writePublish inner_path , Page . jsonEncode ( data ), (res) = elem . removeClass ( loading ) if res == true @log File written else # Failed elem . toggleClass ( active ) # Change back return false","title":"fileGet"},{"location":"en/site_development/zeroframe_api_reference/#filelist","text":"Recursively list of files in a directory Parameter Description inner_path Directory you want to list Return : List of files in the directory (recursive)","title":"fileList"},{"location":"en/site_development/zeroframe_api_reference/#fileneed","text":"Initialize download of a (optional) file. Parameter Description inner_path The file you want to get timeout (optional) Maximum wait time to data arrive (default: 300) Return : \"ok\" on successfull download","title":"fileNeed"},{"location":"en/site_development/zeroframe_api_reference/#filequery","text":"Simple json file query command Parameter Description dir_inner_path Pattern of queried files query Query command (optional) Return : Matched content Query examples: [\"data/users/*/data.json\", \"topics\"] : Returns all topics node from all user files [\"data/users/*/data.json\", \"comments.1@2\"] : Returns user_data[\"comments\"][\"1@2\"] value from all user files [\"data/users/*/data.json\", \"\"] : Returns all data from users files [\"data/users/*/data.json\"] : Returns all data from users files (same as above) Example: @cmd fileQuery , [ data/users/*/data.json , topics ], (topics) = topics . sort (a, b) - # Sort by date return a . added - b . added for topic in topics @log topic . topic_id , topic . inner_path , topic . title","title":"fileQuery"},{"location":"en/site_development/zeroframe_api_reference/#filerules","text":"Return the rules for the file. Parameter Description inner_path File inner path Return : Matched content Example result: { current_size : 2485 , cert_signers : { zeroid.bit : [ 1iD5ZQJMNXu43w1qLB8sfdHVKppVMduGz ]}, files_allowed : data.json , signers : [ 1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj ], user_address : 1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj , max_size : 100000 } Example: @cmd fileRules , data/users/1J3rJ8ecnwH2EPYa6MrgZttBNc61ACFiCj/content.json , (rules) = @log rules","title":"fileRules"},{"location":"en/site_development/zeroframe_api_reference/#filewrite","text":"Write file content Parameter Description inner_path Inner path of the file you want to write content_base64 Content you want to write to file (base64 encoded) Return : \"ok\" on success else the error message Example: writeData: (cb=null) - # Encode to json, encode utf8 json_raw = unescape ( encodeURIComponent ( JSON . stringify ({ hello : ZeroNet }, undefined , \\t ))) # Convert to to base64 and send @cmd fileWrite , [ data.json , btoa ( json_raw )], (res) = if res == ok if cb then cb ( true ) else @cmd wrapperNotification , [ error , File write error: #{ res } ] if cb then cb ( false ) Note: to write files that not in content.json yet, you must have \"own\": true in data/sites.json at the site you want to write","title":"fileWrite"},{"location":"en/site_development/zeroframe_api_reference/#ping","text":"Test UiServer websocket connection Return: pong","title":"ping"},{"location":"en/site_development/zeroframe_api_reference/#serverinfo","text":"Return: All information about the server Example: @cmd serverInfo , {}, (server_info) = @log Server info: , server_info Example return value: { debug : true , # Running in debug mode fileserver_ip : * , # Fileserver binded to fileserver_port : 15441 , # FileServer port ip_external : true , # Active of passive mode platform : win32 , # Operating system ui_ip : 127.0.0.1 , # UiServer binded to ui_port : 43110 , # UiServer port (Web) version : 0.2.5 # Version }","title":"serverInfo"},{"location":"en/site_development/zeroframe_api_reference/#siteinfo","text":"Return : All information about the site Example: @cmd siteInfo , {}, (site_info) = @log Site info: , site_info Example return value: { tasks : 0 , # Number of files currently under download size_limit : 10 , # Current site size limit in MB address : 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr , # Site address next_size_limit : 10 , # Size limit required by sum of site s files auth_address : 2D6xXUmCVAXGrbVUGRRJdS4j1hif1EMfae , # Current user s bitcoin address auth_key_sha512 : 269a0f4c1e0c697b9d56ccffd9a9748098e51acc5d2807adc15a587779be13cf , # Deprecated, dont use peers : 14 , # Peers of site auth_key : pOBdl00EJ29Ad8OmVIc763k4 , # Deprecated, dont use settings : { peers : 13 , # Saved peers num for sorting serving : true , # Site enabled modified : 1425344149.365 , # Last modification time of all site s files own : true , # Own site permissions : [ ADMIN ], # Site s permission size : 342165 # Site total size in bytes }, bad_files : 0 , # Files that needs to be download workers : 0 , # Current concurent downloads content : { # Root content.json files : 12 , # Number of file, detailed file info removed to reduce data transfer and parse time description : This site , title : ZeroHello , signs_required : 1 , modified : 1425344149.365 , ignore : (js|css)/(?!all.(js|css)) , signers_sign : null , address : 1EU1tbG9oC1A8jz2ouVwGZyQ5asrNsE4Vr , zeronet_version : 0.2.5 , includes : 0 }, cert_user_id : zeronetuser@zeroid.bit , # Currently selected certificate for the site started_task_num : 1 , # Last number of files downloaded content_updated : 1426008289.71 # Content.json update time }","title":"siteInfo"},{"location":"en/site_development/zeroframe_api_reference/#sitepublish","text":"Publish a content.json of the site Parameter Description privatekey (optional) Private key used for signing (default: current user's privatekey) inner_path (optional) Inner path of the content json you want to publish (default: content.json) sign (optional) If True then sign the content.json before publish (default: True) Return : \"ok\" on success else the error message Example: # Prompt the private key @cmd wrapperPrompt , [ Enter your private key: , password ], (privatekey) = $ ( .publishbar .button ). addClass ( loading ) # Send sign content.json and publish request to server @cmd sitePublish , [ privatekey ], (res) = $ ( .publishbar .button ). removeClass ( loading ) @log Publish result: , res","title":"sitePublish"},{"location":"en/site_development/zeroframe_api_reference/#sitereload","text":"Reload content.json file content and scans for optional files Return : \"ok\" on success","title":"siteReload"},{"location":"en/site_development/zeroframe_api_reference/#sitesign","text":"Sign a content.json of the site Parameter Description privatekey (optional) Private key used for signing (default: current user's privatekey) inner_path (optional) Inner path of the content json you want to sign (default: content.json) remove_missing_optional (optional) Remove the optional files from content.json that no longer present in the directory (default: False) Return : \"ok\" on success else the error message Note: Use \"stored\" as privatekey if its definied in users.json (eg. cloned sites) Example: if @site_info [ privatekey ] # Private key stored in users.json @cmd siteSign , [ stored , content.json ], (res) = @log Sign result , res","title":"siteSign"},{"location":"en/site_development/zeroframe_api_reference/#siteupdate","text":"Force check and download changed content from other peers (only necessary if user is in passive mode and using old version of Zeronet) Parameter Description address Address of site want to update (only current site allowed without site ADMIN permission) Return: None Example: # Manual site update for passive connections updateSite: = $ ( #passive_error a ). addClass ( loading ). removeClassLater ( loading , 1000 ) @log Updating site... @cmd siteUpdate , { address : @site_info . address }","title":"siteUpdate"},{"location":"en/site_development/zeroframe_api_reference/#usergetsettings","text":"Get user's saved settings. Return: The user specific site's settings saved using userSetSettings.","title":"userGetSettings"},{"location":"en/site_development/zeroframe_api_reference/#usersetsettings","text":"Set user's site specific settings. Parameter Description settings The user's site specific settings you want to store. Return: ok on success","title":"userSetSettings"},{"location":"en/site_development/zeroframe_api_reference/#plugin-bigfile","text":"","title":"Plugin: Bigfile"},{"location":"en/site_development/zeroframe_api_reference/#bigfileuploadinit","text":"Initialize a new upload endpoint for a bigfile. Parameter Description inner_path Upload location size File size Return : A dict with the information about the upload: Parameter Description url Http upload endpoint piece_size Size of each separately hashed part of the file inner_path File path within the site file_relative_path File path relative to content.json Note: Not supported non-ascii characters will be automatically removed from inner_path and file_relative_path values Example var input = document . createElement ( input ) document . body . appendChild ( input ) input . type = file input . style . visibility = hidden input . onchange = () = { var file = input . files [ 0 ] page . cmd ( bigfileUploadInit , [ optional/ + file . name , file . size ], ( init_res ) = { var formdata = new FormData () formdata . append ( file . name , file ) var req = new XMLHttpRequest () req . upload . addEventListener ( progress , console . log ) req . upload . addEventListener ( loadend , () = page . cmd ( wrapperConfirm , [ Upload finished! , Open file ], () = { window . top . location = init_res . inner_path } ) ) req . withCredentials = true req . open ( POST , init_res . url ) req . send ( formdata ) }) } input . click ()","title":"BigfileUploadInit"},{"location":"en/site_development/zeroframe_api_reference/#plugin-chart","text":"","title":"Plugin: Chart"},{"location":"en/site_development/zeroframe_api_reference/#chartdbquery","text":"Run database query on chart database. Arguments and return value: Same as dbQuery","title":"chartDbQuery"},{"location":"en/site_development/zeroframe_api_reference/#chartgetpeerlocations","text":"Get list of unique peers in client Return : List of unique peers Example : Page . cmd ( chartGetPeerLocations ) [ { lat : 43.6655 , city : Toronto , ping : null , lon : - 79.4204 , country : Canada }, ... ]","title":"chartGetPeerLocations"},{"location":"en/site_development/zeroframe_api_reference/#plugin-cors","text":"Allow cross-site file access under virtual directory /cors-siteaddress/ and grant cross-site database query using the as API command.","title":"Plugin: Cors"},{"location":"en/site_development/zeroframe_api_reference/#corspermission","text":"Request Cross origin resource sharing permission with the given site. Parameter Description address The site address you want get cors access Return : ok on success After the permission is granted the other site's files will be available under /cors-siteaddress/ virtual directory via http request or by the fileGet API command. The site will be added to user's client if it's required.","title":"corsPermission"},{"location":"en/site_development/zeroframe_api_reference/#plugin-cryptmessage","text":"","title":"Plugin: CryptMessage"},{"location":"en/site_development/zeroframe_api_reference/#userpublickey","text":"Get user's site specific publickey Parameter Description index (optional) Sub-publickey within site (default: 0) Return : base64 encoded publickey","title":"userPublickey"},{"location":"en/site_development/zeroframe_api_reference/#eciesencrypt","text":"Encrypt a text using a publickey Parameter Description text Text to encrypt publickey (optional) User's publickey index (int) or base64 encoded publickey (default: 0) return_aes_key (optional) Get the AES key used in encryption (default: False) Return : Encrypted text in base64 format or [Encrypted text in base64 format, AES key in base64 format]","title":"eciesEncrypt"},{"location":"en/site_development/zeroframe_api_reference/#eciesdecrypt","text":"Try to decrypt list of texts Parameter Description params A text or list of encrypted texts privatekey (optional) User's privatekey index (int) or base64 encoded privatekey (default: 0) Return : Decrypted text or list of decrypted texts (null for failed decodings)","title":"eciesDecrypt"},{"location":"en/site_development/zeroframe_api_reference/#aesencrypt","text":"Encrypt a text using the key and the iv Parameter Description text A text encrypt using AES key (optional) Base64 encoded password (default: generate new) iv (optional) Base64 encoded iv (default: generate new) Return : [base64 encoded key, base64 encoded iv, base64 encoded encrypted text]","title":"aesEncrypt"},{"location":"en/site_development/zeroframe_api_reference/#aesdecrypt","text":"Decrypt text using the IV and AES key Parameter Description iv IV in Base64 format encrypted_text Encrypted text in Base64 format encrypted_texts List of [base64 encoded iv, base64 encoded encrypted text] pairs key Base64 encoded password for the text keys Keys for decoding (tries every one for every pairs) Return : Decoded text or list of decoded texts","title":"aesDecrypt"},{"location":"en/site_development/zeroframe_api_reference/#plugin-newsfeed","text":"","title":"Plugin: Newsfeed"},{"location":"en/site_development/zeroframe_api_reference/#feedfollow","text":"Set followed sql queries. The SQL query should result in rows with cols: Field Description type Type: post, article, comment, mention date_added Event time title Event's first line to be displayed body Event's second and third line url Link to event's page Parameter Description feeds Format: {\"query name\": [SQL query, [param1, param2, ...], ...}, parameters will be escaped, joined by , inserted in place of :params in the Sql query. Return : ok Example: # Follow ZeroBlog posts query = SELECT post_id AS event_uri, post AS type, date_published AS date_added, title AS title, body AS body, ?Post: || post_id AS url FROM post params = [ ] Page . cmd feedFollow [{ Posts : [ query , params ]}]","title":"feedFollow"},{"location":"en/site_development/zeroframe_api_reference/#feedlistfollow","text":"Return of current followed feeds Return : The currently followed feeds in the same format as in the feedFollow commands","title":"feedListFollow"},{"location":"en/site_development/zeroframe_api_reference/#feedquery","text":"Execute all followed sql query Return : The result of the followed Sql queries Parameter Description limit Limit of results per followed site (default: 10) day_limit Return no older than number of this days (default: 3)","title":"feedQuery"},{"location":"en/site_development/zeroframe_api_reference/#plugin-mergersite","text":"","title":"Plugin: MergerSite"},{"location":"en/site_development/zeroframe_api_reference/#mergersiteadd","text":"Start downloading new merger site(s) Parameter Description addresses Site address or list of site addresses","title":"mergerSiteAdd"},{"location":"en/site_development/zeroframe_api_reference/#mergersitedelete","text":"Stop seeding and delete a merged site Parameter Description address Site address","title":"mergerSiteDelete"},{"location":"en/site_development/zeroframe_api_reference/#mergersitelist","text":"Return merged sites. Parameter Description query_site_info If True, then gives back detailed site info for merged sites","title":"mergerSiteList"},{"location":"en/site_development/zeroframe_api_reference/#plugin-mute","text":"","title":"Plugin: Mute"},{"location":"en/site_development/zeroframe_api_reference/#muteadd","text":"Add new user to mute list. (Requires confirmation for non-ADMIN sites) Parameter Description auth_address Directory name of the user's data. cert_user_id Cert user name of the user reason Reason of the muting Return : ok if confirmed Example: Page . cmd ( muteAdd , [ 1GJUaZMjTfeETdYUhchSkDijv6LVhjekHz , helloworld@kaffie.bit , Spammer ])","title":"muteAdd"},{"location":"en/site_development/zeroframe_api_reference/#muteremove","text":"Remove a user from mute list. (Requires confirmation for non-ADMIN sites) Parameter Description auth_address Directory name of the user's data. Return : ok if confirmed Example: Page . cmd ( muteRemove , 1GJUaZMjTfeETdYUhchSkDijv6LVhjekHz )","title":"muteRemove"},{"location":"en/site_development/zeroframe_api_reference/#mutelist","text":"List muted users. (Requires ADMIN permission on site) Return : List of muted users","title":"muteList"},{"location":"en/site_development/zeroframe_api_reference/#plugin-optionalmanager","text":"","title":"Plugin: OptionalManager"},{"location":"en/site_development/zeroframe_api_reference/#optionalfilelist","text":"Return list of optional files Parameter Description address The site address you want to list optional files (default: current site) orderby Order of returned optional files (default: time_downloaded DESC) limit Max number of returned optional files (default: 10) Return : Database row of optional files: file_id, site_id, inner_path, hash_id, size, peer, uploaded, is_downloaded, is_pinned, time_added, time_downlaoded, time_accessed","title":"optionalFileList"},{"location":"en/site_development/zeroframe_api_reference/#optionalfileinfo","text":"Query optional file info from database Parameter Description inner_path The path of the file Return : Database row of optional file: file_id, site_id, inner_path, hash_id, size, peer, uploaded, is_downloaded, is_pinned, time_added, time_downlaoded, time_accessed","title":"optionalFileInfo"},{"location":"en/site_development/zeroframe_api_reference/#optionalfilepin","text":"Pin (exclude from automatized optional file cleanup) downloaded optional file Parameter Description inner_path The path of the file address Address for the file (default: current site)","title":"optionalFilePin"},{"location":"en/site_development/zeroframe_api_reference/#optionalfileunpin","text":"Remove pinning (include from automatized optional file cleanup) of downloaded optional file Parameter Description inner_path The path of the file address Address for the file (default: current site)","title":"optionalFileUnpin"},{"location":"en/site_development/zeroframe_api_reference/#optionalfiledelete","text":"Query a downloaded optional file Parameter Description inner_path The path of the file address Address for the file (default: current site)","title":"optionalFileDelete"},{"location":"en/site_development/zeroframe_api_reference/#optionallimitstats","text":"Return currently used disk space by optional files Return : limit, used and free space statistics","title":"optionalLimitStats"},{"location":"en/site_development/zeroframe_api_reference/#optionallimitset","text":"Set the optional file limit Parameter Description limit Max space used by the optional files in gb or percent of used space","title":"optionalLimitSet"},{"location":"en/site_development/zeroframe_api_reference/#optionalhelplist","text":"List the auto-downloaded directories of optional files Parameter Description address Address of site you want to list helped directories (default: current site) Return : Dict of auto-downloaded directories and descriptions","title":"optionalHelpList"},{"location":"en/site_development/zeroframe_api_reference/#optionalhelp","text":"Add directory to auto-download list Parameter Description directory Directory you want to add to auto-download list title Title for the entry (displayed on ZeroHello) address Address of site you want to add the auto-download directory (default: current site)","title":"optionalHelp"},{"location":"en/site_development/zeroframe_api_reference/#optionalhelpremove","text":"Remove an auto-download entry Parameter Description directory Directory you want to remove from auto-download list address Address of affected site (default: current site)","title":"optionalHelpRemove"},{"location":"en/site_development/zeroframe_api_reference/#optionalhelpall","text":"Help download every new uploaded optional file to the site Parameter Description value Enable or Disable the auto-download address Address of affected site (default: current site)","title":"optionalHelpAll"},{"location":"en/site_development/zeroframe_api_reference/#admin-commands","text":"(requires ADMIN permission in data/sites.json)","title":"Admin commands"},{"location":"en/site_development/zeroframe_api_reference/#as","text":"Execute command in other site's context Parameter Description address The context site's address cmd API command name arguments API command arguments Return : Command's return value Example Page . cmd ( as , [ 138R53t3ZW7KDfSfxVpWUsMXgwUnsDNXLP , siteSetLimit , 20 ], console . log ) address = 138R53t3ZW7KDfSfxVpWUsMXgwUnsDNXLP query = SELECT * FROM json WHERE file_name = :file_name params = { file_name : data.json } Page . cmd ( as , [ address , dbQuery , [ query , params ]], function ( res ) { console . log ( res . length ) } ) Return : ok","title":"as"},{"location":"en/site_development/zeroframe_api_reference/#configset","text":"Create or update an entry in ZeroNet config file. (zeronet.conf by default) Parameter Description key Configuration entry name value Configuration entry new value Return : ok","title":"configSet"},{"location":"en/site_development/zeroframe_api_reference/#certset","text":"Set the used certificate for current site. Parameter Description domain Domain of the certificate issuer Return : None","title":"certSet"},{"location":"en/site_development/zeroframe_api_reference/#channeljoinallsite","text":"Request notifications about every site's events. Parameter Description channel Channel to join (see channelJoin) Return : None","title":"channelJoinAllsite"},{"location":"en/site_development/zeroframe_api_reference/#serverportcheck","text":"Start checking if port is opened Return : True (port opened) or False (port closed)","title":"serverPortcheck"},{"location":"en/site_development/zeroframe_api_reference/#servershutdown","text":"Stop running ZeroNet client. Return : None","title":"serverShutdown"},{"location":"en/site_development/zeroframe_api_reference/#serverupdate","text":"Re-download ZeroNet from github. Return : None","title":"serverUpdate"},{"location":"en/site_development/zeroframe_api_reference/#siteclone","text":"Copy site files into a new one. Every file and directory will be skipped if it has a -default subfixed version and the subfixed version will be copied instead of it. Eg. If you have a data and a data-default directory: The data directory will not be copied and the data-default directory will be renamed to data. Parameter Description address Address of site want to clone root_inner_path The source directory of the new site Return : None, automatically redirects to new site on completion","title":"siteClone"},{"location":"en/site_development/zeroframe_api_reference/#sitelist","text":"Return : SiteInfo list of all downloaded sites","title":"siteList"},{"location":"en/site_development/zeroframe_api_reference/#sitepause","text":"Pause site serving Parameter Description address Address of site want to pause Return : None","title":"sitePause"},{"location":"en/site_development/zeroframe_api_reference/#siteresume","text":"Resume site serving Parameter Description address Address of site want to resume Return : None","title":"siteResume"},{"location":"en/using_zeronet/create_new_site/","text":"Create new ZeroNet site Easy way: Using the web interface Click on \u22ee \"Create new, empty site\" menu item on the site ZeroHello . You will be redirected to a completely new site that is only modifiable by you! You can find and modify your site's content in data/[yoursiteaddress] directory After the modifications open your site, drag the topright \"0\" button to left, then press sign and publish buttons on the bottom Manual way: Using the command line 1. Create site structure Shut down ZeroNet if it is running Browse to the folder where ZeroNet is installed and run: $ zeronet.py siteCreate ... - Site private key: 23DKQpzxhbVBrAtvLEc2uvk7DZweh4qL3fn3jpM3LgHDczMK2TtYUq - Site address: 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2 ... - Site created! $ zeronet.py ... This will create the initial files for your site inside data/13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2 . Note: Windows users using the bundle version must browse into the ZeroBundle/ZeroNet folder and run \"../Python/python.exe\" zeronet.py siteCreate 2. Build/Modify site Update the site files located in data/[your site address key] (eg: 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2). When your site is ready run: $ zeronet.py siteSign 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2 - Signing site: 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2... Private key ( input hidden ) : Enter the private key you got when you created the site. This will sign all files so peers can verify that the site owner is who made the changes. 3. Publish site changes In order to inform peers about the changes you made you need to run: $ zeronet.py sitePublish 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2 ... Site:13DNDk..bhC2 Publishing to 3 /10 peers... Site:13DNDk..bhC2 Successfuly published to 3 peers - Serving files.... That's it! You've successfully signed and published your modifications. Your site will be accessible from: http://localhost:43110/13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2 Next steps: ZeroNet Developer Documentation","title":"Create new ZeroNet site"},{"location":"en/using_zeronet/create_new_site/#create-new-zeronet-site","text":"","title":"Create new ZeroNet site"},{"location":"en/using_zeronet/create_new_site/#easy-way-using-the-web-interface","text":"Click on \u22ee \"Create new, empty site\" menu item on the site ZeroHello . You will be redirected to a completely new site that is only modifiable by you! You can find and modify your site's content in data/[yoursiteaddress] directory After the modifications open your site, drag the topright \"0\" button to left, then press sign and publish buttons on the bottom","title":"Easy way: Using the web interface"},{"location":"en/using_zeronet/create_new_site/#manual-way-using-the-command-line","text":"","title":"Manual way: Using the command line"},{"location":"en/using_zeronet/create_new_site/#1-create-site-structure","text":"Shut down ZeroNet if it is running Browse to the folder where ZeroNet is installed and run: $ zeronet.py siteCreate ... - Site private key: 23DKQpzxhbVBrAtvLEc2uvk7DZweh4qL3fn3jpM3LgHDczMK2TtYUq - Site address: 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2 ... - Site created! $ zeronet.py ... This will create the initial files for your site inside data/13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2 . Note: Windows users using the bundle version must browse into the ZeroBundle/ZeroNet folder and run \"../Python/python.exe\" zeronet.py siteCreate","title":"1. Create site structure"},{"location":"en/using_zeronet/create_new_site/#2-buildmodify-site","text":"Update the site files located in data/[your site address key] (eg: 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2). When your site is ready run: $ zeronet.py siteSign 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2 - Signing site: 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2... Private key ( input hidden ) : Enter the private key you got when you created the site. This will sign all files so peers can verify that the site owner is who made the changes.","title":"2. Build/Modify site"},{"location":"en/using_zeronet/create_new_site/#3-publish-site-changes","text":"In order to inform peers about the changes you made you need to run: $ zeronet.py sitePublish 13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2 ... Site:13DNDk..bhC2 Publishing to 3 /10 peers... Site:13DNDk..bhC2 Successfuly published to 3 peers - Serving files.... That's it! You've successfully signed and published your modifications. Your site will be accessible from: http://localhost:43110/13DNDkMUExRf9Xa9ogwPKqp7zyHFEqbhC2 Next steps: ZeroNet Developer Documentation","title":"3. Publish site changes"},{"location":"en/using_zeronet/installing/","text":"Installing ZeroNet Download ZeroBundle package: Microsoft Windows , Apple macOS , Linux 64bit , Linux 32bit Unpack anywhere Run ZeroNet.exe (win), ZeroNet(.app) (macOS), ZeroNet.sh (linux) Manual install for Debian Linux sudo apt-get update sudo apt-get install msgpack-python python-gevent wget https://github.com/HelloZeroNet/ZeroNet/archive/master.tar.gz tar xvpfz master.tar.gz cd ZeroNet-master Start with python zeronet.py Open http://127.0.0.1:43110/ in your browser Vagrant vagrant up Access VM with vagrant ssh cd /vagrant Run python zeronet.py --ui_ip 0.0.0.0 Open http://127.0.0.1:43110/ in your browser Docker docker run -d -v local_data_folder :/root/data -p 15441:15441 -p 127.0.0.1:43110:43110 nofish/zeronet This Docker image includes the Tor proxy, which is disabled by default. Beware that some hosting providers may not allow you running Tor in their servers. If you want to enable it, set ENABLE_TOR environment variable to true (Default: false ). E.g.: docker run -d -e \"ENABLE_TOR=true\" -v local_data_folder :/root/data -p 15441:15441 -p 127.0.0.1:43110:43110 nofish/zeronet * Open http://127.0.0.1:43110/ in your browser Virtualenv virtualenv env source env/bin/activate pip install msgpack-python gevent python zeronet.py Open http://127.0.0.1:43110/ in your browser","title":"Installing ZeroNet"},{"location":"en/using_zeronet/installing/#installing-zeronet","text":"Download ZeroBundle package: Microsoft Windows , Apple macOS , Linux 64bit , Linux 32bit Unpack anywhere Run ZeroNet.exe (win), ZeroNet(.app) (macOS), ZeroNet.sh (linux)","title":"Installing ZeroNet"},{"location":"en/using_zeronet/installing/#manual-install-for-debian-linux","text":"sudo apt-get update sudo apt-get install msgpack-python python-gevent wget https://github.com/HelloZeroNet/ZeroNet/archive/master.tar.gz tar xvpfz master.tar.gz cd ZeroNet-master Start with python zeronet.py Open http://127.0.0.1:43110/ in your browser","title":"Manual install for Debian Linux"},{"location":"en/using_zeronet/installing/#vagrant","text":"vagrant up Access VM with vagrant ssh cd /vagrant Run python zeronet.py --ui_ip 0.0.0.0 Open http://127.0.0.1:43110/ in your browser","title":"Vagrant"},{"location":"en/using_zeronet/installing/#docker","text":"docker run -d -v local_data_folder :/root/data -p 15441:15441 -p 127.0.0.1:43110:43110 nofish/zeronet This Docker image includes the Tor proxy, which is disabled by default. Beware that some hosting providers may not allow you running Tor in their servers. If you want to enable it, set ENABLE_TOR environment variable to true (Default: false ). E.g.: docker run -d -e \"ENABLE_TOR=true\" -v local_data_folder :/root/data -p 15441:15441 -p 127.0.0.1:43110:43110 nofish/zeronet * Open http://127.0.0.1:43110/ in your browser","title":"Docker"},{"location":"en/using_zeronet/installing/#virtualenv","text":"virtualenv env source env/bin/activate pip install msgpack-python gevent python zeronet.py Open http://127.0.0.1:43110/ in your browser","title":"Virtualenv"},{"location":"en/using_zeronet/sample_sites/","text":"Sample ZeroNet sites ZeroHello The homepage of ZeroNet Lists all added sites: Title, Peer number, Modification date, etc. Site actions: Update, Pause, Resume, Delete, Check Files and Save as .zip Clone sites to have your own blog / forum ZeroNet Statistics If an update is available, ZeroNet can be updated with one click Address: 1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D Source code ZeroBlog Self publishing blog demo Inline content editor Markdown syntax Code syntax highlighting Site signing publishing through the web interface How does it work? data.json contained within site files contain blog posts and comments. Each user has their own. Upon pressing Sign Publish new content , the blogger is asked for the site private key (displayed when creating a new site using zeronet.py siteCreate command ) Your ZeroNet client signs the new/modified files and publishes directly to other peers The site will then be accessible until to other peers to view Address: 1BLogC9LN4oPDcruNz3qo1ysa133E9AGg8 or blog.zeronetwork.bit Source code ZeroTalk Decentralized, P2P forum demo Post and comment creation, modification, deletion and upvoting Commenting and content modifications pushed directly to other peers Only you can sign and modify your own files Real time display of new comments How does it work? To post and comment you have to request a certificate of registration (a cryptographic sign) from a ZeroID provider After you have the certificate you can publish your content (messages, posts, upvotes) directly to other peers Address: 1TaLkFrMwvbNsooF4ioKAY9EuxTBTjipT or talk.zeronetwork.bit Source code ZeroMail End-to-end encrypted, distributed, P2P messaging site. To improve privacy it uses a BitMessage-like solution and will not expose the message recipient. Using ECIES for secret exchange, AES256 for message encoding When you first visit the site, it adds your public key to your data file. At that point anyone is able to send a message to you Everyone tries to decrypt every message, this improves privacy by making it impossible to find the message recipient To reduce per message overhead and increase decryption speed, we re-use the AES key, but a new IV is generated every time Address: 1MaiL5gfBM1cyb4a8e3iiL8L5gXmoAJu27 or mail.zeronetwork.bit Source code ZeroMe Decentralized, Twitter-like P2P social network. Stores user information in ZeroMe user registry Stores posts and comments in MergerSites called Hubs Upload images as optional files Real time display of feed activity Address: 1MeFqFfFFGQfa1J3gJyYYUvb5Lksczq7nH Source code ReactionGIFs Demo for optional files, files which only download from other peers if your browser requests them. Address: 1Gif7PqWTzVWDQ42Mo7np3zXmGAo3DXc7h Source code ZeroChat The finished site for the tutorial of creating a server-less, SQL backed, real-time updated P2P chat application using ZeroNet in less than 100 lines of code. Uses ZeroID certificate for authentication Stores messages in a SQLite database Posts messages and distribute directly to other users in real-time Real-time update the messages as they arrive Address of finished site: 1AvF5TpcaamRNtqvN1cnDEWzNmUtD47Npg Tutorial on ZeroBlog: Part1 , Part2","title":"Sample ZeroNet sites"},{"location":"en/using_zeronet/sample_sites/#sample-zeronet-sites","text":"","title":"Sample ZeroNet sites"},{"location":"en/using_zeronet/sample_sites/#zerohello","text":"The homepage of ZeroNet Lists all added sites: Title, Peer number, Modification date, etc. Site actions: Update, Pause, Resume, Delete, Check Files and Save as .zip Clone sites to have your own blog / forum ZeroNet Statistics If an update is available, ZeroNet can be updated with one click Address: 1HeLLo4uzjaLetFx6NH3PMwFP3qbRbTf3D Source code","title":"ZeroHello"},{"location":"en/using_zeronet/sample_sites/#zeroblog","text":"Self publishing blog demo Inline content editor Markdown syntax Code syntax highlighting Site signing publishing through the web interface How does it work? data.json contained within site files contain blog posts and comments. Each user has their own. Upon pressing Sign Publish new content , the blogger is asked for the site private key (displayed when creating a new site using zeronet.py siteCreate command ) Your ZeroNet client signs the new/modified files and publishes directly to other peers The site will then be accessible until to other peers to view Address: 1BLogC9LN4oPDcruNz3qo1ysa133E9AGg8 or blog.zeronetwork.bit Source code","title":"ZeroBlog"},{"location":"en/using_zeronet/sample_sites/#zerotalk","text":"Decentralized, P2P forum demo Post and comment creation, modification, deletion and upvoting Commenting and content modifications pushed directly to other peers Only you can sign and modify your own files Real time display of new comments How does it work? To post and comment you have to request a certificate of registration (a cryptographic sign) from a ZeroID provider After you have the certificate you can publish your content (messages, posts, upvotes) directly to other peers Address: 1TaLkFrMwvbNsooF4ioKAY9EuxTBTjipT or talk.zeronetwork.bit Source code","title":"ZeroTalk"},{"location":"en/using_zeronet/sample_sites/#zeromail","text":"End-to-end encrypted, distributed, P2P messaging site. To improve privacy it uses a BitMessage-like solution and will not expose the message recipient. Using ECIES for secret exchange, AES256 for message encoding When you first visit the site, it adds your public key to your data file. At that point anyone is able to send a message to you Everyone tries to decrypt every message, this improves privacy by making it impossible to find the message recipient To reduce per message overhead and increase decryption speed, we re-use the AES key, but a new IV is generated every time Address: 1MaiL5gfBM1cyb4a8e3iiL8L5gXmoAJu27 or mail.zeronetwork.bit Source code","title":"ZeroMail"},{"location":"en/using_zeronet/sample_sites/#zerome","text":"Decentralized, Twitter-like P2P social network. Stores user information in ZeroMe user registry Stores posts and comments in MergerSites called Hubs Upload images as optional files Real time display of feed activity Address: 1MeFqFfFFGQfa1J3gJyYYUvb5Lksczq7nH Source code","title":"ZeroMe"},{"location":"en/using_zeronet/sample_sites/#reactiongifs","text":"Demo for optional files, files which only download from other peers if your browser requests them. Address: 1Gif7PqWTzVWDQ42Mo7np3zXmGAo3DXc7h Source code","title":"ReactionGIFs"},{"location":"en/using_zeronet/sample_sites/#zerochat","text":"The finished site for the tutorial of creating a server-less, SQL backed, real-time updated P2P chat application using ZeroNet in less than 100 lines of code. Uses ZeroID certificate for authentication Stores messages in a SQLite database Posts messages and distribute directly to other users in real-time Real-time update the messages as they arrive Address of finished site: 1AvF5TpcaamRNtqvN1cnDEWzNmUtD47Npg Tutorial on ZeroBlog: Part1 , Part2","title":"ZeroChat"}]}